[{"path":"https://usepa.github.io/FrEDI/articles/About.html","id":"summary","dir":"Articles","previous_headings":"","what":"Summary","title":"About FrEDI","text":"Framework Evaluating Damages Impacts (FrEDI) developed understand communicate potential physical economic impacts future climate change United States. FrEDI works first taking user-defined projections U.S. population, gross domestic product (GDP), global (CONUS) mean surface temperature change (relative 1986-2005 average baseline). run, FrEDI draws upon underlying sector, state, GCM-specific temperature-impact relationships project annual physical economic impacts climate change across multiple impact sectors, U.S. states, population groups across contiguous U.S. (CONUS), end 21st century (optionally year 2300).  Recommended Citation: EPA. 2024. Technical Documentation Framework Evaluating Damages Impacts (FrEDI). U.S. Environmental Protection Agency, EPA 430-R-24-001. Available : https://www.epa.gov/cira/fredi.","code":""},{"path":"https://usepa.github.io/FrEDI/articles/About.html","id":"key-characteristics","dir":"Articles","previous_headings":"","what":"Key Characteristics","title":"About FrEDI","text":"FrEDI fills important gap assessing U.S. climate change impacts : Incorporating broad range impact studies common analytic framework Providing robust, customizable, fast tool facilitate custom scenario analyses Providing flexible framework can readily incorporate new information, ensure projections reflect latest science climate change impacts FrEDI draws upon wide range existing scientific literature. FrEDI currently draws upon 30 existing peer-reviewed studies climate change impact models uses impacts--degree temperature binning approach (Sarofim et al., 2021), estimate relationship future degrees warming impacts across 20 impact category sectors (Hartin et al., 2023). Many sectoral studies adapted EPA’s Climate Change Impacts Risk Assessment (CIRA) project, began 2008 assess compare impacts climate change U.S. using consistent set climate models socioeconomic scenarios. External studies (example Climate Impacts Lab) now also integrated FrEDI cases underlying studies can provide regional physical economic impacts degree warming (cm sea level rise) can scaled account future socioeconomic (e.g., GDP population) sector-specific conditions. FrEDI peer-reviewed developed open-source R package. Framework Technical Documentation subject public review comment period independent external peer review, following guidance EPA Peer-Review Handbook Influential Scientific Information (ISI). Information peer-review available EPA Science Inventory. FrEDI customizable fast. shown Figure 1, user first provides custom projections mean surface temperature, U.S. population, GDP. Within minutes FrEDI outputs timeseries annual physical economic impacts across multiple dimensions (see Examples page). framework include natural variability therefore designed quantify impacts, level accuracy, level future temperature change. FrEDI continually improved reflect current state climate change impact science. FrEDI currently includes temperature-impact relationships 20 health, infrastructure, electricity, agriculture, recreation, ecosystem-related sectors includes capacity differentiate sectoral impacts across multiple geographic regions within U.S., demographics, various adaptation scenarios. described Technical Documentation, FrEDI continually updated incorporate new studies common framework reflect latest available science climate change impacts within U.S. borders.","code":""},{"path":"https://usepa.github.io/FrEDI/articles/About.html","id":"technical-details","dir":"Articles","previous_headings":"","what":"Technical Details","title":"About FrEDI","text":"FrEDI can run single scenario, run multiple times different inputs, example facilitate comparisons two individual scenarios (e.g., reference policy), assess uncertainties input projections. main FrEDI function FrEDI::run_fredi(), described Getting Started page. FrEDI also includes FrEDI::run_fredi_sv() module, added capability compare distribution physical climate-driven impacts six impact sectors across different population groups concern within U.S.","code":""},{"path":"https://usepa.github.io/FrEDI/articles/About.html","id":"fredi-input","dir":"Articles","previous_headings":"Technical Details","what":"FrEDI Input","title":"About FrEDI","text":"FrEDI::run_fredi() can accept following projections input: Temperature (global CONUS) Sea-Level Rise (optional) U.S. Population U.S. GDP user supply projections, FrEDI use FrEDI default projections (see Example #1)","code":""},{"path":"https://usepa.github.io/FrEDI/articles/About.html","id":"temperature","dir":"Articles","previous_headings":"Technical Details > FrEDI Input","what":"Temperature","title":"About FrEDI","text":"CSV containing mean temperatures degrees Celsius relative 1986-2005 average (degrees warming relative baseline). Temperature values must greater equal zero Celsius. first column needs contain years interval 2000 2100 (2300) second column contains temperatures, degrees Celsius, 1986-2005 baseline. Users can convert global temperatures CONUS temperatures using FrEDI::convertTemps(=\"global\") specifying FrEDI::import_inputs(temptype=\"global\") importing temperature scenario CSV file. FrEDI can also used project impacts associated temperature trajectories associated specific emission scenarios. Users encouraged use simple climate model first relate emissions global mean temperature change, input FrEDI.","code":""},{"path":"https://usepa.github.io/FrEDI/articles/About.html","id":"sea-level-rise-slr","dir":"Articles","previous_headings":"Technical Details > FrEDI Input","what":"Sea Level Rise (SLR)","title":"About FrEDI","text":"CSV file containing custom sea level rise scenario, centimeters. first column contains years interval 2000 2100 (2300) second column contains values global mean sea level rise (GMSL), centimeters, 2000 baseline. SLR scenario specified, FrEDI project SLR based input temperature trajectory.","code":""},{"path":"https://usepa.github.io/FrEDI/articles/About.html","id":"u-s--population","dir":"Articles","previous_headings":"Technical Details > FrEDI Input","what":"U.S. Population","title":"About FrEDI","text":"CSV file containing U.S. population scenario. first column contains years interval 2010 2100 (2300). second contains population values. third column specifies geographical scale data. details, see ?import_inputs().","code":""},{"path":"https://usepa.github.io/FrEDI/articles/About.html","id":"u-s--gdp","dir":"Articles","previous_headings":"Technical Details > FrEDI Input","what":"U.S. GDP","title":"About FrEDI","text":"CSV file containing scenario U.S. gross domestic product (GDP). first column contains years interval 2010 2100 second column contains values GDP, total 2015$. See FrEDI::import_inputs() function information formatting input data use FrEDI.","code":""},{"path":"https://usepa.github.io/FrEDI/articles/About.html","id":"additional-parameters","dir":"Articles","previous_headings":"Technical Details > FrEDI Input","what":"Additional Parameters","title":"About FrEDI","text":"Users also option specify additional parameters, including: income elasticity (default = 1) - numeric value indicating elasticity use adjusting VSL applicable sectors impacts. level desired results aggregation specifying sectors analyze (default ==)","code":""},{"path":"https://usepa.github.io/FrEDI/articles/About.html","id":"fredi-output","dir":"Articles","previous_headings":"Technical Details","what":"FrEDI Output","title":"About FrEDI","text":"FrEDI outputs R dataframe impacts corresponding following dimensions: Regions States Impact sectors Variants Impact types Note: care taken calculating national total impacts sectors, variants, impact types capture overlapping impacts. information, see Example #1","code":""},{"path":"https://usepa.github.io/FrEDI/articles/About.html","id":"fredi-regions","dir":"Articles","previous_headings":"Technical Details > FrEDI Output","what":"FrEDI Regions","title":"About FrEDI","text":"FrEDI currently estimates climate-driven impacts occur within physical borders 48 states plus District Columbia within contiguous United States (CONUS). states can aggregated regions (Southeast, Southern Plains, Southwest, Northwest, Northern Plains, Midwest, Northeast; see Figure 1), correspond 4th National Climate Assessment.","code":""},{"path":"https://usepa.github.io/FrEDI/articles/About.html","id":"fredi-impact-sectors-units","dir":"Articles","previous_headings":"Technical Details > FrEDI Output","what":"FrEDI Impact Sectors & Units","title":"About FrEDI","text":"FrEDI currently projects monetized climate-driven impacts across 20 health, infrastructure, electricity, agriculture, recreation, ecosystem-related sectors. FrEDI includes economic impacts (units $2015 USD) sectors physical endpoints (e.g., morbidity, mortality, response costs, etc.) nine sectors. current list FrEDI sectors, run: details sector underlying damage functions, see FrEDI Technical Documentation","code":"FrEDI_sector info <- FrEDI::get_sectorInfo(description =T)"},{"path":"https://usepa.github.io/FrEDI/articles/About.html","id":"fredi-variants-adaptation-options","dir":"Articles","previous_headings":"Technical Details > FrEDI Output","what":"FrEDI Variants & Adaptation Options","title":"About FrEDI","text":"assess aspects uncertainty underlying impact studies, FrEDI also includes multiple variant options select sectors. listed variant column FrEDI sector output dataframe. example, Temperature-Related Mortality (ATS Temperature-Related mortality), includes multiple impact estimates correspond mean, well high low confidence intervals sector (based information underlying study). sectors, Agriculture (CIL Agriculture), include impact estimates derived multiple damage functions associated different conditions (e.g., estimates without CO2 fertilization). FrEDI also calculates climate-driven impacts different adaptation assumptions, select sectors. Adaptation options applicable sectors (e.g., Coastal Property, Roads, Rail) also included variants. available adaptation options reflect extent treatment paid adaptation underlying sectoral impact studies. adaptation options labeled FrEDI : Additional Adaptation: additional adaptation reflect “business usual” scenario, incorporates adaptive measures strategies reflected historical actions respond climate hazards Reactive Adaptation, Reasonably Anticipated Adaptation: reflect options taken without advanced warning foresight (e.g., action taken prevent mitigate future climate change impacts) Proactive Adaptation Direct Adaptation: reflect damages cost-effective adaptations implemented perfect foresight. FrEDI includes adaptation options realized magnitude, type, location, timing long-term climate-driven damages intricately linked ability implement adaptive measures reduce risks.","code":""},{"path":"https://usepa.github.io/FrEDI/articles/About.html","id":"fredi-impact-types","dir":"Articles","previous_headings":"Technical Details > FrEDI Output","what":"FrEDI Impact Types","title":"About FrEDI","text":"FrEDI also calculates impacts within sector function multiple impactTypes. impact types considered depend level detail available underlying impact studies. example, impacts climate-driven changes air quality (Climate-Driven Changes Air Quality) calculated separately mortality-related impacts ozone fine particulate matter (PM2.5), can combined calculate total impacts sector.","code":""},{"path":"https://usepa.github.io/FrEDI/articles/About.html","id":"fredi-sv-module","dir":"Articles","previous_headings":"Technical Details","what":"FrEDI SV Module","title":"About FrEDI","text":"FrEDI_SV module can also assess social vulnerability implications impacts climate change select sectors specific population groups concern. basic structure, specific methodology, data underlying FrEDI_SV derived EPA’s independently peer-reviewed September 2021 report,Climate Change Social Vulnerability United States: Focus Six Impacts., based assessment spatial intersection climate impacts projected occur current location different demographic groups, characterized Census American Community Survey. See Example #2 information running FrEDI_SV.","code":""},{"path":"https://usepa.github.io/FrEDI/articles/About.html","id":"interpreting-fredi-results","dir":"Articles","previous_headings":"","what":"Interpreting FrEDI Results","title":"About FrEDI","text":"results main module (FrEDI::run_fredi()) presented net annual impacts, either physical units $2015 US dollars. FrEDI evaluates negative positive effects climate change. national level, net climate-driven damages outweigh positive effects sectors. reflect climate-driven impacts accrued baseline period given impact year. Presenting impacts specific year consistent approach commonly used throughout climate impact literature, including Intergovernmental Panel Climate Change (IPCC) Scientific Assessment Reports U.S National Climate Assessment (NCA). also important caveats consider interpreting FrEDI results, including limited : FrEDI comprehensive accounting climate-driven impacts expected occur within contiguous U.S. borders currently include impacts occurring AK, HI, U.S. territories. FrEDI consider impacts U.S. citizens residing outside U.S. feedbacks climate impacts elsewhere back U.S. trade, etc. additional uncertainties FrEDI’s underlying temperature-impact relationships fully captured available variant options uncertainties climate drivers human responses adapt changes drivers","code":""},{"path":"https://usepa.github.io/FrEDI/articles/Example1.html","id":"running-fredi-with-default-parameters","dir":"Articles","previous_headings":"","what":"Running FrEDI with Default Parameters","title":"Example #1","text":"FrEDI commonly used project annual, climate-driven physical economic impacts associated user-defined trajectories U.S. temperature change (relative 1985-2005 baseline), population, GDP. vignette provides simple example run analyze data FrEDI’s default scenario. example script: Installs FrEDI R package GitHub Sets FrEDI input run parameters. Runs FrEDI inputs specified Step 2 Shows example types analyses using FrEDI output data. information FrEDI, see page FrEDI Technical Documentation","code":""},{"path":"https://usepa.github.io/FrEDI/articles/Example1.html","id":"installFrEDI","dir":"Articles","previous_headings":"","what":"Step 1. Install FrEDI R package","title":"Example #1","text":"installing first time, see Installing & Running FrEDI page. Load package successfully installing FrEDI, documentation FrEDI functions can accessed way R packages. overview FrEDI’s user-defined functions, type library(help=\"FrEDI\") R console (command show documentation FrEDI even package installed). documentation specific function, type help(\"*functionName*\", package=\"FrEDI\") R console, functionName name one functions FrEDI (e.g., help(\"aggregate_impacts\", package=\"FrEDI\")). FrEDI installed, users can also search function-specific documentation RStudio Help window. Move focus Help window using keyboard shortcut Ctrl+3 toggle search field Help using Ctrl+Alt+F1. Documentation function includes examples.","code":"library(FrEDI) ## Warning: package 'tidyverse' was built under R version 4.4.1 ## Warning: package 'ggplot2' was built under R version 4.4.1 ## Warning: package 'tibble' was built under R version 4.4.1 ## Warning: package 'tidyr' was built under R version 4.4.1 ## Warning: package 'readr' was built under R version 4.4.1 ## Warning: package 'purrr' was built under R version 4.4.1 ## Warning: package 'dplyr' was built under R version 4.4.1 ## Warning: package 'stringr' was built under R version 4.4.1 ## Warning: package 'forcats' was built under R version 4.4.1 ## Warning: package 'lubridate' was built under R version 4.4.1"},{"path":"https://usepa.github.io/FrEDI/articles/Example1.html","id":"setFrEDI","dir":"Articles","previous_headings":"","what":"Step 2. Set FrEDI Runtime parameters","title":"Example #1","text":"First, use chunk specify & format input projections. Either provide paths specific files, set NULL use default projections variable Use chunk specify input trajectories (temperature, population, GDP) runtime parameters FrEDI. input files specified, run_fredi() use default temperature, U.S. population, GDP projections. case, run_fredi() calculate annual projected sea level rise based default temperature change. Default population scenarios based UN Median Population projection (United Nations, 2015) EPA’s ICLUSv2 model (Bierwagen et al., 2010; EPA 2017), GDP EPPA version 6 model (Chen et al., 2015). Default temperature projections GCAM reference scenario. Current default projections U.S. GDP, national population, U.S. temperature year 2090 70 trillion (2015USD), 438 million, 3.4°C respectively.  Next, set FrEDI runtime parameters","code":"# To run FrEDI for more than one scenario, the code below can be # adapted into a loop to format the inputs for each scenario.   #*********************************************** #1. Specify & Format Input Trajectories (temperature, population, U.S. GDP)  ## Input Files tempInputFile <- NULL # Description: csv file with time series of temperature relative to 1986-2005 average  # (units: degC, values: >=0) # data must start in 2000 or earlier and can be global or CONUS # If global --> must convert to CONUS temperature using the import_inputs() helper function # column 1 = 'year', column 2 = 'temp_C'  slrInputFile <- NULL  # Description: csv file with time series of global mean sea level rise relative to 2000 # (units: cm, values: >= 0 and <= 250) # data must start in 2000 or earlier # column 1 = 'year', column 2 = 'slr_cm' # If NULL - slr is calculated from the input temperature trajectory  gdpInputFile <- NULL # Description: csv file with time series of U.S. Gross Domestic Product (units: 2015$, values: >= 0)  # data must start in 2010 or earlier # column 1 = 'year', column 2 = 'gdp_usd'  # If NULL - use default GDP trajectory  popInputFile <- NULL # Description: csv file with time series of annual U.S. population (values >= 0)  # data must start in 2010 or earlier # column 1 = 'year', column 2 = 'pop', column 3 = depends on \"popArea\" # If NULL - use default population trajectory (from ICLUS)   ## Input Trajectory parameters popAreaflag = 'state'    # Description: Use this to specify the geographical scale of the population data # Options: \"state\",\"regional\",\"national\". # For more information, see `?import_inputs()` for more information  temptypeflag <- 'global'  # Description: Use this to specify whether the input temperature is global or CONUS # import_inputs() will convert to global to CONUS temperature # Options: global (input is global T), conus (input is CONUS T)   ## Use the import_inputs() helper function to format the input trajectories for use in FrEDI inputs_list <- import_inputs(tempfile = tempInputFile,                              slrfile = slrInputFile,                              popfile = popInputFile,                              gdpfile = gdpInputFile,                              temptype = temptypeflag,                              popArea = popAreaflag) thru2300Flag = FALSE # Purpose:  #   Specify whether to run FrEDI through 2100 (default) or extend to 2300 # Default: FALSE (will run to 2100)  SectorListFlag <- NULL   # Purpose:  #   Specify the vector of sectors to calculate results for # Default: report output for all sectors # See FrEDI:get_sectorInfo() for list of all sectors  aggLevelFlag <- c('national','modelaverage','impactyear') # Purpose:  #   Specify the desired level of results aggregation. For example, #   to report national total results across all underlying climate-model  #   damage functions, set the flag to c('national','modelaverage') # Options: at least one from c('national', 'modelaverage', 'impactyear', #   'impacttype', 'all'), or \"none\".  # Default: c('national', 'modelaverage', 'impactyear','impacttype')  maxYearFlag <- 2100 # Purpose:  #   Specify the last year of the analysis  # Default: 2100  elasticityFlag <- 1    # Purpose:  #   Specify the income elasticity used to adjust the Value of a #   Statistical Life (VSL) # Options: any numeric value # Default: 1  outputListFlag <- FALSE # Purpose: #   Specify whether to return input arguments in addition to results data frame # Options: TRUE/FALSE.  # Default: FALSE  allColsFlag <- TRUE # Purpose: #   Specify whether to include physical and economic multipliers (used in testing) # Options: TRUE/FALSE.  # Default: FALSE  silentFlag <- TRUE        # Purpose: #   Specify the level of messaging to the user # Options: TRUE/FALSE.  # Default: TRUE"},{"path":"https://usepa.github.io/FrEDI/articles/Example1.html","id":"runFrEDI","dir":"Articles","previous_headings":"","what":"Step 3. Run FrEDI","title":"Example #1","text":"Run FrEDI using main run_fredi() function Default parameter options used parameters specified run_fredi().","code":"#Run FrEDI using inputs and parameters set in Step #2  output_df <- run_fredi(inputsList = inputs_list,                         sectorList = SectorListFlag,                        aggLevels  = aggLevelFlag,                        elasticity = elasticityFlag,                        maxYear    = maxYearFlag,                        thru2300   = thru2300Flag,                        outputList = outputListFlag,                        allCols    = allColsFlag,                        silent     = silentFlag ) ## Checking input values... ##  No temperature scenario provided...using default temperature scenario... ##  Creating SLR scenario from temperature scenario... ##  No GDP scenario provided...Using default GDP scenario... ##  Creating population scenario from defaults... ## Updating scalars... ## Calculating impacts... ## Formatting results... ##  ## Finished. # Option: write output ## Write Full Dataframe to CSV (or feather) # write.csv(output_df, './output/example_output.csv')  #First five lines of output dataframe #output_df[1:5,]"},{"path":"https://usepa.github.io/FrEDI/articles/Example1.html","id":"analyzeFrEDI","dir":"Articles","previous_headings":"","what":"Step 4. Analyze FrEDI","title":"Example #1","text":"following chunks provide three examples options analyze raw output dataframe FrEDI::run_fredi() Disclaimer: results provide illustrative example used analysis.","code":""},{"path":"https://usepa.github.io/FrEDI/articles/Example1.html","id":"example-1","dir":"Articles","previous_headings":"Step 4. Analyze FrEDI","what":"Example 1","title":"Example #1","text":"Extract national average economic damages (billions dollars 2015$) FrEDI sectors specified year Output chunk includes snapshot subset resulting dataframe *Note: Use sectorprimary ==1 includeaggregate >=1 flags filter FrEDI dataframe impacts default impact sectors variants. recommendations aggregating impacts across sectors, see FrEDI Technical Documentation (Chapter 2) FrEDI::run_fredi() documentation. Example Subset 2100 Annual National Sectoral Climate-Driven Impacts","code":"#specify year c_years = c(2100)  df_filter <- output_df %>%   # filter for primary sectors and variants (included to avoid    #  double counting final impacts)   filter(sectorprimary ==1,          includeaggregate >=1) %>%   # use helper function to aggregate across the impact types of    #  each sector   aggregate_impacts(aggLevels = 'impactType') %>%   # filter for national aggregate results averaged across all GCMs,    #  for the specified year   filter(model %in% c('Average','Interpolation'),          region == \"National Total\",          year %in% c_years) %>%   # convert to billions of dollars   mutate(annual_impacts = annual_impacts /1e9) %>%    # round results   mutate(across(annual_impacts, round, 0)) %>%   # select (and rename) relevant columns   select('sector','region','year','annual_impacts') %>%   rename('billions_2015$' = annual_impacts)    #Display first 10 sectors library('kableExtra') kable(df_filter[1:10,],        caption = 'Example *Subset* of 2100 Annual National Sectoral Climate-Driven Impacts') %>%   kable_styling(font_size = 12, full_width = F)"},{"path":"https://usepa.github.io/FrEDI/articles/Example1.html","id":"example-2","dir":"Articles","previous_headings":"Step 4. Analyze FrEDI","what":"Example 2","title":"Example #1","text":"Extract national average physical damages FrEDI sectors include physical impacts, specified year Output chunk includes snapshot subset resulting dataframe *Note: Use sectorprimary ==1 includeaggregate >=1 flags filter FrEDI dataframe impacts default impact sectors variants.recommendations aggregating impacts across sectors, see FrEDI Technical Documentation (Chapter 2) FrEDI::run_fredi() documentation. Example Subset 2100 Annual National Sectoral Climate-Driven Physical Impacts","code":"#specify year c_years = c(2100)  df_filter <- output_df %>%   # filter for primary sectors and variants (included to avoid    #  double counting final impacts)   filter(sectorprimary ==1,          includeaggregate >=1) %>%   # filter for national aggregate results averaged across all GCMs   #  and only include sectors that include physical impacts   filter(model %in% c('Average','Interpolation'),          region == \"National Total\",          year %in% c_years,          !(is.na(physicalmeasure))) %>%   # round results   mutate(across(c('physical_impacts'), round, 0)) %>%   # select relevant columns to display   select('sector','region','year','physicalmeasure',          'impactType','physical_impacts')  #display first 10 rows kable(df_filter[c(1,6:9,14),],        caption = 'Example *Subset* of 2100 Annual National Sectoral Climate-Driven Physical Impacts') %>%   kable_styling(font_size = 12, full_width = F)"},{"path":"https://usepa.github.io/FrEDI/articles/Example1.html","id":"example-3","dir":"Articles","previous_headings":"Step 4. Analyze FrEDI","what":"Example 3","title":"Example #1","text":"Extract state economic impacts FrEDI sectors specified year Output chunk includes snapshot subset resulting dataframe *Note: Use sectorprimary ==1 includeaggregate >=1 flags filter FrEDI dataframe impacts default impact sectors variants. recommendations aggregating impacts across sectors, see FrEDI Technical Documentation (Chapter 2) FrEDI::run_fredi() documentation. Example 2100 Annual Climate-Driven Damages, State Please contact FrEDI developers additional questions.","code":"#specify year c_years = c(2100)  #filter and aggregate data, assign to aggregate categories df_filter <- output_df %>%   # filter for primary sectors and variants (included to avoid    #  double counting final impacts)   filter(sectorprimary ==1,          includeaggregate >=1) %>%   # use helper function to aggregate across the impact types of    #  each sector   aggregate_impacts(aggLevels = 'impactType') %>%   # filter for regional results, averaged across all GCMs,    #  for the specified year   filter(model %in% c('Average','Interpolation'),          !(region == \"National Total\"),          year %in% c_years) %>%   # convert to billions (2015$)   mutate(annual_impacts = annual_impacts /1e9) %>%   # round results   mutate(across(c('annual_impacts'), round, 0)) %>%   # sum across all sectors for each state   group_by_at(.vars = c('state','year')) %>%   ##  SEE RECOMMENDATIONS FOR AGGREGATION in FrEDI TECHNICAL DOCUMENTATION ##   mutate(annual_impacts = case_when(sector == 'ATS Temperature-Related Mortality' ~                               annual_impacts - annual_impacts[sector == 'Suicide'],                              .default = annual_impacts)) %>%   summarize_at(c(\"annual_impacts\"), sum, na.rm=T) %>%   ungroup %>%   # select (and rename) relevant columns   select('state','year','annual_impacts')%>%   rename('billions_2015$' = annual_impacts)   kable(df_filter[1:10,],        caption = 'Example 2100 Annual Climate-Driven Damages, by State') %>%   kable_styling(font_size = 12, full_width = F)"},{"path":"https://usepa.github.io/FrEDI/articles/Example2.html","id":"running-fredis-social-vulnerability-module","dir":"Articles","previous_headings":"","what":"Running FrEDI’s Social Vulnerability Module","title":"Example #2","text":"vignette provides simple example run analyze data FrEDI’s SV module, default scenario, specific sector. example script: Installs FrEDI R package GitHub Sets FrEDI_SV input run parameters. Runs FrEDI_SV inputs specified Step 2 Shows example types analyses using FrEDI_SV output data. information FrEDI FrEDI_SV, see page FrEDI Technical Documentation","code":""},{"path":"https://usepa.github.io/FrEDI/articles/Example2.html","id":"installFrEDI","dir":"Articles","previous_headings":"","what":"Step 1. Install FrEDI R package","title":"Example #2","text":"installing first time, see Installing & Running FrEDI page. Load package successfully installing FrEDI, documentation FrEDI functions can accessed way R packages. overview FrEDI’s user-defined functions, type library(help=\"FrEDI\") R console (command show documentation FrEDI even package installed). documentation specific function, type help(\"*functionName*\", package=\"FrEDI\") R console, functionName name one functions FrEDI (e.g., help(\"aggregate_impacts\", package=\"FrEDI\")). FrEDI installed, users can also search function-specific documentation RStudio Help window. Move focus Help window using keyboard shortcut Ctrl+3 toggle search field Help using Ctrl+Alt+F1. Documentation function includes examples.","code":"library(FrEDI) ## Warning: package 'tidyverse' was built under R version 4.4.1 ## Warning: package 'ggplot2' was built under R version 4.4.1 ## Warning: package 'tibble' was built under R version 4.4.1 ## Warning: package 'tidyr' was built under R version 4.4.1 ## Warning: package 'readr' was built under R version 4.4.1 ## Warning: package 'purrr' was built under R version 4.4.1 ## Warning: package 'dplyr' was built under R version 4.4.1 ## Warning: package 'stringr' was built under R version 4.4.1 ## Warning: package 'forcats' was built under R version 4.4.1 ## Warning: package 'lubridate' was built under R version 4.4.1"},{"path":"https://usepa.github.io/FrEDI/articles/Example2.html","id":"setFrEDI","dir":"Articles","previous_headings":"","what":"Step 2. Set FrEDI_SV Runtime parameters","title":"Example #2","text":"First, use chunk specify & format input projections. Either provide paths specific files, set NULL use default projections variable Use chunk specify input trajectories (temperature, population, GDP) runtime parameters FrEDI_SV. input files specified, run_fredi_sv() use default temperature U.S. regional population projections. case, run_fredi_sv() calculate annual projected sea level rise based default temperature change. Default population scenarios based UN Median Population projection (United Nations, 2015) EPA’s ICLUSv2 model (Bierwagen et al., 2010; EPA 2017). Default temperature projections GCAM reference scenario. Current default projections U.S. national population U.S. temperature year 2090 438 million, 3.4°C respectively.  Next, set FrEDI_SV runtime parameters","code":"# To run FrEDI_SV for more than one scenario, the code below can be # adapted into a loop to format the inputs for each scenario.   #*********************************************** #1. Specify & Format Input Trajectories (temperature, population, U.S. GDP)  ## Input Files tempInputFile <- NULL # Description: csv file with time series of temperature relative to 1986-2005 average  # (units: degC, values: >=0) # data must start in 2000 or earlier and can be global or CONUS # If global --> must convert to CONUS temperature using the import_inputs() helper function # column 1 = 'year', column 2 = 'temp_C'  temptypeflag <- 'global'  # Description: Use this to specify whether the input temperature is global or CONUS # import_inputs() will convert to global to CONUS temperature # Options: global (input is global T), conus (input is CONUS T)   ## Use the import_inputs() helper function to format the input trajectories for use in FrEDI inputs_list <- import_inputs(tempfile = tempInputFile) # Calculate the run_fredi_sv() results for a single impact sector  # NOTE: the run_fredi_sv() module takes a few minutes to run because # the damages are calculated at the Census tract level and then  # aggregated to the regional level  # take formatted temperature vector from the output of the # import_inputs() helper function  temp_input <- inputs_list$tempInput   # To see all available sectors, run: # FrEDI::get_sv_sectorInfo()  # Specify a specific sector sectorFlag = \"Air Quality - Premature Mortality\"   # Purpose:   #   Specify the SV sector to calculate (can only run one sector at once)   # Options: run FrEDI::get_sv_sectorInfo() to get a list of the    #   possible sectors driverFlag <- temp_input   # Purpose:   #   Specify the temperature trajectory (up to 4) to use as an input.    #   Temperature needs to be in degrees C, *CONUS* temperature, relative   #   to the 1986-2005 average baseline   #   column 1 = 'year','column 2 = 'scenario', column 3 = 'temp_C'   #   NOTE: if temperature is in global degrees, use the    #   FrEDI::convertTemps() helper function to convert from global to CONUS popFlag <- NULL   # Purpose:   #   Specify the population trajectory to use as an input.   # column 1 = 'year', column 2 = 'region', column 3 = 'state', column 4 = 'postal', column 5 = 'state_pop'   # default = if null, uses default population trajectory silentFlag = TRUE   # Purpose:   #   Specify the level of messaging desired   # Options: TRUE/FALSE"},{"path":"https://usepa.github.io/FrEDI/articles/Example2.html","id":"runFrEDI","dir":"Articles","previous_headings":"","what":"Step 3. Run FrEDI_SV","title":"Example #2","text":"Run FrEDI_SV using main run_fredi_sv() function Default parameter options used parameters specified run_fredi_sv(). Note: run_fredi_sv() takes longer run main module, run_fredi(), SV damage calculations conducted finer spatial scales (e.g., U.S. Census tract vs. regional level).","code":"#Run FrEDI using inputs and parameters set in Step #2  output_df <- run_fredi_sv(sector      = sectorFlag,                            driverInput = driverFlag,                            popInput    = popFlag,                           silent      = silentFlag)   # Option: write output ## Write Full Dataframe to CSV (or feather) # write.csv(output_df, './output/example_output.csv')  #First five lines of output dataframe #output_df[1:5,]"},{"path":"https://usepa.github.io/FrEDI/articles/Example2.html","id":"analyzeFrEDI","dir":"Articles","previous_headings":"","what":"Step 4. Analyze FrEDI_SV","title":"Example #2","text":"Results FrEDI::run_fredi_sv() module can analyzed directly R Disclaimer: results provide illustrative example used analysis. Example analyses coming soon Please contact FrEDI developers additional questions.","code":""},{"path":"https://usepa.github.io/FrEDI/articles/manual.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"Installing & Running FrEDI","text":"FrEDI developed R package.","code":""},{"path":"https://usepa.github.io/FrEDI/articles/manual.html","id":"r","dir":"Articles","previous_headings":"Installation","what":"R","title":"Installing & Running FrEDI","text":"Install R Rstudio, following instructions operating system.","code":""},{"path":"https://usepa.github.io/FrEDI/articles/manual.html","id":"fredi","dir":"Articles","previous_headings":"Installation","what":"FrEDI","title":"Installing & Running FrEDI","text":"FrEDI R package can installed using withr::with_libpaths() devtools::install_github() functions. packages installed, run: install FrEDI first time: user can specify particular github branch, including ref. included, default branch main.  installation exists following error: Downloading GitHub repo USEPA/FrEDI@ref Error utils::download.file(url, path, method = method, quiet = quiet,  :    open URL 'https://api.github.com/repos/USEPA/FrEDI/tarball/ref' Make sure withr devtools date. prompted installation, update listed R packages (e.g., Enter 1).","code":"install.packages('withr') install.packages('devtools') withr::with_libpaths(       new = .libPaths()[1],       devtools::install_github(         repo = \"USEPA/FrEDI\",           subdir = \"FrEDI\",           type = \"source\",           force = TRUE,           ref = \"v4.1\" # edit this to install a different branch of interest         )     )  library(FrEDI)"},{"path":"https://usepa.github.io/FrEDI/articles/manual.html","id":"running-fredi","dir":"Articles","previous_headings":"","what":"Running FrEDI","title":"Installing & Running FrEDI","text":"provide simple example steps required run FrEDI: RStudio, first load user-defined temperature, population, GDP input files. temperature file includes global temperatures, use FrEDI helper functions convert CONUS temperature. Next, run FrEDI: examples, visit Examples page.","code":"tempInputFile <- file.path(\"your_file.csv\") inputs        <- import_inputs(tempfile = tempInputFile,                                  temptype = \"global\") df_fredi_output <- run_fredi(inputsList= inputs)"},{"path":"https://usepa.github.io/FrEDI/articles/References.html","id":"documentation","dir":"Articles","previous_headings":"","what":"Documentation","title":"Documentation & Applications","text":"Publications Hartin C., E.E. McDuffie, K. Novia, M. Sarofim, B. Parthum, J. Martinich, S. Barr, J. Neumann, J. Willwerth, & . Fawcett. Advancing estimates future climate impacts within United States, 2023, Earth System Dynamics, https://esd.copernicus.org/articles/14/1015/2023/ Sarofim, M.C., Martinich, J., Neumann, J.E. et al. temperature binning approach multi-sector climate impact analysis. Climatic Change 165, 22 2021, https://doi.org/10.1007/s10584-021-03048-6 Technical Documentation FrEDI Technical Documentation Appendxi:https://www.epa.gov/cira/-fredi","code":""},{"path":"https://usepa.github.io/FrEDI/articles/References.html","id":"example-applications","dir":"Articles","previous_headings":"","what":"Example Applications","title":"Documentation & Applications","text":"Framework Evaluating Impacts Damages (FrEDI) used explore climate-related impacts United States variety future scenarios. example applications FrEDI, including recent peer-reviewed literature studies, well links several recent documents included analyses U.S. impact results informed FrEDI output, see: https://www.epa.gov/cira/fredi-publications--applications","code":""},{"path":"https://usepa.github.io/FrEDI/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Corinne Hartin. Author, maintainer.            cahartin Erin McDuffie. Author, contributor.            emcduffie Marcus Sarofim. Author, contributor.            emcduffie Karen Noiva. Author, contributor.            knoiva-indecon Tony Gardella. Contributor.            tonygard-indecon Maddock. Contributor.            maddockw Hugh Easton. Contributor.            heaston-indecon","code":""},{"path":"https://usepa.github.io/FrEDI/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Hartin C, McDuffie E, Sarofim M, Noiva K (2024). FrEDI: Framework Evaluating Damages Impacts (FrEDI). R package version 4.1.1, https://epa.gov/cira/FrEDI/, https://github.com/USEPA/FrEDI/, https://usepa.github.io/FrEDI.","code":"@Manual{,   title = {FrEDI: The Framework for Evaluating Damages and Impacts (FrEDI)},   author = {Corinne Hartin and Erin McDuffie and Marcus Sarofim and Karen Noiva},   year = {2024},   note = {R package version 4.1.1, https://epa.gov/cira/FrEDI/, https://github.com/USEPA/FrEDI/},   url = {https://usepa.github.io/FrEDI}, }"},{"path":[]},{"path":"https://usepa.github.io/FrEDI/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://usepa.github.io/FrEDI/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://usepa.github.io/FrEDI/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://usepa.github.io/FrEDI/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://usepa.github.io/FrEDI/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.1, available https://www.contributor-covenant.org/version/2/1/code_of_conduct.html. Community Impact Guidelines inspired Mozilla’s code conduct enforcement ladder. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"https://usepa.github.io/FrEDI/index.html","id":"fredi-","dir":"","previous_headings":"","what":"The Framework for Evaluating Damages and Impacts (FrEDI)","title":"The Framework for Evaluating Damages and Impacts (FrEDI)","text":"repository FrEDI, Framework Evaluating Damages Impacts, developed U.S. Environmental Protection Agency (EPA). FrEDI open-source, reduced form model rapidly projects impacts climate change within United States, custom temperature policy pathway. FrEDI developed fill important gap assessing U.S. climate change impacts incorporating broad range impact studies common, open-source framework. allows FrEDI facilitate comparability across impact studies, flexibility facilitating custom scenario analyses. FrEDI continually developed currently draws upon 30 existing peer-reviewed studies, including Climate Change Impacts Risk Analysis (CIRA) project, estimate relationship future degrees warming impacts across 20 category sectors, 48 U.S. states plus District Columbia, population groups. supplied user-defined temperature trajectory, FrEDI applies temperature-impact relationships rapidly project annual climate change impacts damages end 21st century. Recommended Citation: EPA 2024. Technical Documentation Framework Evaluating Damages Impacts (FrEDI). U.S. Environmental Protection Agency, EPA 430-R-24-001. Available : https://www.epa.gov/cira/fredi. EPA Disclaimer United States Environmental Protection Agency (EPA) GitHub project code provided “” basis user assumes responsibility use. EPA relinquished control information longer responsibility protect integrity, confidentiality, availability information. reference specific commercial products, processes, services service mark, trademark, manufacturer, otherwise, constitute imply endorsement, recommendation favoring EPA. EPA seal logo shall used manner imply endorsement commercial product activity EPA United States Government. submitting pull request GitHub /installing package, make agreement EPA submit claim compensation services rendered EPA federal agency. , agree charge time spend developing software code related project federal grant cooperative agreement.","code":""},{"path":"https://usepa.github.io/FrEDI/reference/aggregate_impacts.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarize and aggregate impacts from run_fredi() (calculate national totals, average across models, sum impact types, and interpolate between impact year estimates) — aggregate_impacts","title":"Summarize and aggregate impacts from run_fredi() (calculate national totals, average across models, sum impact types, and interpolate between impact year estimates) — aggregate_impacts","text":"Summarize aggregate impacts run_fredi() (calculate national totals, average across models, sum impact types, interpolate impact estimate years).","code":""},{"path":"https://usepa.github.io/FrEDI/reference/aggregate_impacts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarize and aggregate impacts from run_fredi() (calculate national totals, average across models, sum impact types, and interpolate between impact year estimates) — aggregate_impacts","text":"","code":"aggregate_impacts(   data,   aggLevels = c(\"national\", \"modelaverage\", \"impacttype\", \"impactyear\"),   columns = c(\"physical_impacts\", \"annual_impacts\"),   groupByCols = c(c(c(c(\"sector\", \"variant\", \"impactType\", \"impactYear\"), \"region\",     \"state\", \"postal\"), \"model_type\", \"model\"), \"includeaggregate\", \"sectorprimary\"),   silent = TRUE )"},{"path":"https://usepa.github.io/FrEDI/reference/aggregate_impacts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarize and aggregate impacts from run_fredi() (calculate national totals, average across models, sum impact types, and interpolate between impact year estimates) — aggregate_impacts","text":"data Data frame results FrEDI (outputs run_fredi()) aggLevels Levels aggregation summarize data: one c(\"national\", \"modelAverage\", \"impactYear\", \"impactType\", \"\" ). Defaults levels (.e., aggLevels = \"\"). Note , \"impacttype\" aggLevels (e.g., aggLevels = \"\"), column \"physical_measure\" dropped groupByCols column \"physical_impacts\" dropped columns. aggregating impact types sectors requires summing costs different types physical impacts, reporting physical impacts nonsensical. columns Character vector columns aggregate results (defaults columns = c( \"physical_impacts\", \"annual_impacts\")). groupByCols Character vector indicating columns use grouping. Defaults groupByCols = c(\"sector\", \"variant\", \"impactYear\", \"impactType\", \"model_type\", \"model\", \"sectorprimary\", \"includeaggregate\", \"physicalmeasure\", \"region\", \"state\", \"postal\"). Note \"variant\" column referred contains information variant adaptation name (“N/”), applicable.","code":""},{"path":"https://usepa.github.io/FrEDI/reference/aggregate_impacts.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Summarize and aggregate impacts from run_fredi() (calculate national totals, average across models, sum impact types, and interpolate between impact year estimates) — aggregate_impacts","text":"function can used aggregate summarize FrEDI results levels aggregation specified user (passed aggLevels). Users can specify aggregation levels specifying aggLevels = \"\" (default) aggregation levels (aggLevels = \"none\"). Users can specify single aggregation level multiple aggregation levels passing single character string character vector aggLevels. Options aggregation include calculating national totals (aggLevels= \"national\"), averaging across model types models (aggLevels = \"modelAverage\"), summing impact types (aggLevels = \"impactType\"), interpolating impact year estimates (aggLevels = \"impactYear\"). aggregating impacts national totals /model averages, aggregate_impacts() drop pre-summarized results (.e., values region = \"National Total\" /model = \"Average\", respectively) already present data re-summarize results respective levels. users specify aggLevels = \"none\", aggregate_impacts() returns data frame passed data argument. users specify aggLevels = \"\" combinations aggregation levels, aggregate_impacts() function uses performs following calculations using grouping columns specified groupByCols argument: \"sector\", \"variant\", \"impactType\", \"impactYear\", \"region\", \"state\", \"postal\", \"model_type\", \"model\", \"sectorprimary\", \"includeaggregate\", \"physicalmeasure\", \"year\". aggregating values, aggregate_impacts() joins data frame impacts information \"driverType\", \"driverUnit\", \"driverValue\", \"gdp_usd\", \"national_pop\", \"gdp_percap\", \"state_pop\".","code":""},{"path":"https://usepa.github.io/FrEDI/reference/aggregate_impacts.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Summarize and aggregate impacts from run_fredi() (calculate national totals, average across models, sum impact types, and interpolate between impact year estimates) — aggregate_impacts","text":"Environmental Protection Agency (EPA). 2021. Technical Documentation Framework Evaluating Damages Impacts (FrEDI). Technical Report EPA 430-R-21-004, EPA, Washington, DC. Available https://epa.gov/cira/FrEDI/.","code":""},{"path":"https://usepa.github.io/FrEDI/reference/aggregate_impacts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summarize and aggregate impacts from run_fredi() (calculate national totals, average across models, sum impact types, and interpolate between impact year estimates) — aggregate_impacts","text":"","code":"### Create temperature binning scenario df_results1 <- run_fredi(aggLevels=\"none\", silent=TRUE) #> Checking input values... #> \tNo temperature scenario provided...using default temperature scenario... #> \tCreating SLR scenario from temperature scenario... #> \tNo GDP scenario provided...Using default GDP scenario... #> \tCreating population scenario from defaults... #> Updating scalars... #> Calculating impacts... #> Formatting results... #>  #> Finished.  ### Aggregate temperature binning summary across multiple columns df_results2 <- df_results1 |> aggregate_impacts(columns=c(\"annual_impacts\"), aggLevels=\"all\")"},{"path":"https://usepa.github.io/FrEDI/reference/convertTemps.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert contiguous U.S. (CONUS) temperatures to global temperatures or vice versa — convertTemps","title":"Convert contiguous U.S. (CONUS) temperatures to global temperatures or vice versa — convertTemps","text":"pre-processing helper function converts list warming temperatures degrees Celsius (temps) global CONUS (=\"global\") vice versa (=\"conus\"). equations converting CONUS global temperatures back described elsewhere report.","code":""},{"path":"https://usepa.github.io/FrEDI/reference/convertTemps.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert contiguous U.S. (CONUS) temperatures to global temperatures or vice versa — convertTemps","text":"","code":"convertTemps(temps, from)"},{"path":"https://usepa.github.io/FrEDI/reference/convertTemps.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert contiguous U.S. (CONUS) temperatures to global temperatures or vice versa — convertTemps","text":"temps numeric vector CONUS global temperatures degrees Celsius. character string (one  c(\"conus\", \"global\")), indicating whether users converting CONUS global temperatures (=\"conus\") global CONUS (=\"global\"). Temperatures contiguous U.S. (CONUS) degrees Celsius converted global temperatures (convertTemps(temps, =\"conus\")) degrees Celsius multiplying CONUS temperatures constant 1/k (k=1.421). Global temperatures degrees Celsius converted CONUS temperatures (convertTemps(temps, =\"global\")) degrees Celsius multiplying global temperatures constant k (k=1.421).","code":""},{"path":"https://usepa.github.io/FrEDI/reference/convertTemps.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert contiguous U.S. (CONUS) temperatures to global temperatures or vice versa — convertTemps","text":"Outputs numeric vector temperatures degrees Celsius.","code":""},{"path":"https://usepa.github.io/FrEDI/reference/convertTemps.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Convert contiguous U.S. (CONUS) temperatures to global temperatures or vice versa — convertTemps","text":"Environmental Protection Agency (EPA). 2021. Technical Documentation Framework Evaluating Damages Impacts (FrEDI). Technical Report EPA 430-R-21-004, EPA, Washington, DC. Available https://epa.gov/cira/FrEDI/.","code":""},{"path":"https://usepa.github.io/FrEDI/reference/convertTemps.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert contiguous U.S. (CONUS) temperatures to global temperatures or vice versa — convertTemps","text":"","code":"convertTemps(1:7, from = \"global\") #> [1] 1.421 2.842 4.263 5.684 7.105 8.526 9.947 convertTemps(1:7, from = \"conus\") #> [1] 0.7037298 1.4074595 2.1111893 2.8149191 3.5186488 4.2223786 4.9261084"},{"path":"https://usepa.github.io/FrEDI/reference/defaultResults.html","id":null,"dir":"Reference","previous_headings":"","what":"Default outputs of run_fredi() A dataframe containing the default outputs of run_fredi() — defaultResults","title":"Default outputs of run_fredi() A dataframe containing the default outputs of run_fredi() — defaultResults","text":"Default outputs run_fredi() dataframe containing default outputs run_fredi()","code":""},{"path":"https://usepa.github.io/FrEDI/reference/defaultResults.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Default outputs of run_fredi() A dataframe containing the default outputs of run_fredi() — defaultResults","text":"","code":"defaultResults"},{"path":"https://usepa.github.io/FrEDI/reference/defaultResults.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Default outputs of run_fredi() A dataframe containing the default outputs of run_fredi() — defaultResults","text":"data frame 1,501,500 rows 20 columns: sector Name associated sector. variant Name associated variant adaptation (values sector-specific). impactYear Name impact year (\"2010\", \"2090\", \"N/\", \"Interpolation\"). impactType Name impact type (\"\" sector-specific values). region Name associated region (\"Midwest\", \"Northeast\", \"Northern Plains\", \"Northwest\", \"Southeast\", \"Southern Plains\", \"Southwest\", \"National Total\"). state Name associated state (District Columbia): \"Alabama\", \"Arizona\", \"Arkansas\", \"California\", \"Colorado\", \"Connecticut\", \"Delaware\", \"District Columbia\", \"Florida\", \"Georgia\", \"Idaho\", \"Illinois\", \"Indiana\", \"Iowa\", \"Kansas\",  \"Kentucky\", \"Louisiana\", \"Maine\", \"Maryland\", \"Massachusetts\", \"Michigan\", \"Minnesota\",  \"Mississippi\", \"Missouri\", \"Montana\", \"Nebraska\", \"Nevada\", \"New Hampshire\",  \"New Jersey\", \"New Mexico\", \"New York\", \"North Carolina\", \"North Dakota\", \"Ohio\", \"Oklahoma\",  \"Oregon\", \"Pennsylvania\", \"Rhode Island\", \"South Carolina\", \"South Dakota\", \"Tennessee\", \"Texas\",  \"Utah\", \"Vermont\", \"Virginia\", \"Washington\", \"West Virginia\", \"Wisconsin\", \"Wyoming\". \"National Total\" region, state = \"\". sectors region-level data, state = \"N/\". postal Postal code abbreviation associated state (e.g., postal=\"AL\" state=\"Alabama\"). postal code abbreviation District Columbia \"DC\". \"National Total\" region, postal = \"US\". sectors region-level data, postal = \"N/\". model_type Type model used calculate impacts --- either \"GCM\" (\"Global Climate Model\") \"SLR\" (\"Sea Level Rise\") model Name GCM (\"Average\", \"CanESM2\", \"CCSM4\", \"GCM Ensemble\", \"GFDL-CM3\", \"GISS-E2-R\", \"HadGEM2-ES\", \"MIROC5\", \"MRI-CGCM3\") SLR model (\"Interpolation\") sectorprimary 0 1 value indicating whether sector primary CIRA sector (whether included summing across sectors). sectorprimary=1 primary sector sectorprimary=0 . includeaggregate 0 1 value indicating whether variant primary variant sector (whether included summing across sectors). includeaggregate=1 variant primary variant includeaggregate=0 ). driverType Associated driver type (\"Temperature\" \"GMSL (SLR)\"). driverUnit Unit associated driver type (\"degrees Celsius\" temperature \"cm\" sea level rise). driverValue Value associated driver type (\"degrees Celsius\" temperature \"cm\" sea level rise). gdp_usd National gross domestic product (GDP) associated year 2015 USD (U.S. dollars). national_pop National population associated year. gdp_per_cap National GDP per capita associated year 2015 USD (U.S. dollars) per capita. state_pop Population associated state (state-level data) region (region-data). annual_impacts Annual impacts associated sector, variant, impact type, impact year, region, state, model type, model, year.","code":""},{"path":"https://usepa.github.io/FrEDI/reference/defaultResults.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Default outputs of run_fredi() A dataframe containing the default outputs of run_fredi() — defaultResults","text":"https://epa.gov/cira/FrEDI/","code":""},{"path":"https://usepa.github.io/FrEDI/reference/FrEDI-package.html","id":null,"dir":"Reference","previous_headings":"","what":"README FrEDI: The Framework for Evaluating Damages and Impacts — FrEDI-package","title":"README FrEDI: The Framework for Evaluating Damages and Impacts — FrEDI-package","text":"FrEDI R package developed maintained U.S. Environmental Protection Agency (EPA). functions data provided package can used project impacts climate change within contiguous United States (CONUS), custom temperature socioeconomic trajectory, using Framework Evaluating Damages Impacts (FrEDI) developed part EPA's Climate Change Impacts Risk Analysis (CIRA) project. FrEDI package contains R code implements FrEDI allows users project annual impacts climate change sea level rise across 20 impact sectors, geographic regions, populations end 21st century (optionally 2300). framework currently account ways American public may impacted future climate change, type detailed information helps EPA better understand communicate types potential impacts risks future climate change United States, well potential benefits greenhouse gas mitigation adaptation.","code":""},{"path":"https://usepa.github.io/FrEDI/reference/FrEDI-package.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"README FrEDI: The Framework for Evaluating Damages and Impacts — FrEDI-package","text":"See FrEDI Technical Documentation additional information underlying theory, design, structure, components, capabilities FrEDI, well examples intended uses applications. help getting started FrEDI, visit https://usepa.github.io/FrEDI/articles/manual.html. additional package documentation, see https://usepa.github.io/FrEDI/index.html.","code":""},{"path":"https://usepa.github.io/FrEDI/reference/FrEDI-package.html","id":"overview-of-functions","dir":"Reference","previous_headings":"","what":"Overview of Functions","title":"README FrEDI: The Framework for Evaluating Damages and Impacts — FrEDI-package","text":"function run_fredi() provided package primary function implementing Framework Evaluating Damages Impacts (FrEDI), developed U.S. EPA projecting annual climate impacts. main inputs run_fredi() climate scenarios (temperature degrees Celsius, global mean sea level rise centimeters) socioeconomic scenarios (U.S. gross domestic product, state population). FrEDI also contains functions assist pre-processing input scenarios post-processing outputs. Pre-processing functions include get_sectorInfo(), import_inputs(), convertTemps(), temps2slr(). get_sectorInfo() allows users access list sectors within FrEDI related sector information. import_inputs() helps users importing custom scenarios user-specified comma-separated value (CSV) files. convertTemps() helps users convert global mean temperature temperatures contiguous United States (CONUS) (degrees Celsius). temps2slr() helps users estimate global mean sea level rise (GMSL, centimeters) global mean temperature degrees Celsius. aggregate_impacts() post-processing helper function helps users aggregate summarize outputs FrEDI. aggregate_impacts() can used calculate national totals, model averages, sum impact types, interpolate multiple impact years (note run_fredi() automatically run aggregate_impacts() returning outputs aggLevels argument \"none\"). Versions 2.3.0 include FrEDI Social Vulnerability (SV) module estimating impacts socially vulnerable populations select sectors. get_sv_sectorInfo() allows users access list sectors within FrEDI SV module related sector information. function run_fredi_sv() main function FrEDI SV module. run_fredi_sv() designed calculate impacts single sector time custom population scenario one custom temperature sea level rise scenarios. information data underlying FrEDI SV module, see https://www.epa.gov/cira/social-vulnerability-report/.","code":""},{"path":"https://usepa.github.io/FrEDI/reference/FrEDI-package.html","id":"overview-of-package-contents","dir":"Reference","previous_headings":"","what":"Overview of Package Contents","title":"README FrEDI: The Framework for Evaluating Damages and Impacts — FrEDI-package","text":"FrEDI consists files following directories: R. Contains function definitions (files ending \".R\") configuration files (ending \".rda\"). data. Contains R Data files ending \".rdb\", \".rds\", \".rdx\", containing data included package. help html. Contain documentation functions available user, including function descriptions, lists arguments outputs, examples. See \"html/00Index.html\" individual R help functions information individual functions. Meta. Contains RDS files (ending \".rds\") information package contents. extdata. extdata/scenarios Contains four CSV files users test function importing data. information importing scenarios use run_fredi(), refer documentation function import_inputs(). \"GCAM_scenario.csv\" contains set temperature scenarios can used FrEDI, including default temperature scenario used run_fredi() run_fredi_sv(). Also see documentation gcamScenarios dataset information. \"State ICLUS Population.csv\" contains default state population scenario used run_fredi() (see popScenario popScenario_sv). \"slr_from_GCAM.csv\" contains global mean sea level rise heights centimeters (created reference temperature scenario). extdata/sv Contains files used FrEDI SV module calculate impacts. FrEDI package contains loadable dataset default results defaultResults, contains annual impacts produced run_fredi() default options default scenarios (.e., default temperature, GDP, state population trajectories). loadable datasets provided FrEDI set driver scenarios (gcamScenarios) state population scenario (popScenario) use run_fredi() run_fredi_sv(), can loaded workspace using data() function (e.g., data(gcamScenarios)). Typical use involve library(FrEDI) require(FrEDI).","code":""},{"path":"https://usepa.github.io/FrEDI/reference/FrEDI-package.html","id":"status","dir":"Reference","previous_headings":"","what":"Status","title":"README FrEDI: The Framework for Evaluating Damages and Impacts — FrEDI-package","text":"Disclaimer: code repository provided \"draft\" state reviewed cleared U.S. EPA. status updated models reviewed.","code":""},{"path":"https://usepa.github.io/FrEDI/reference/FrEDI-package.html","id":"dependencies","dir":"Reference","previous_headings":"","what":"Dependencies","title":"README FrEDI: The Framework for Evaluating Damages and Impacts — FrEDI-package","text":"FrEDI requires R (>= 4.2.0). FrEDI depends : tidyverse (Easily Install Load 'Tidyverse'). official documentation tidyverse can found . tidyverse can installed using install.packages(\"tidyverse\"), see link information. ggpubr ('ggplot2' Based Publication Ready Plots). official documentation ggpubr can found . ggpubr can installed using install.packages(\"ggpubr\"), see link information. openxlsx (Read, Write Edit xlsx Files). official documentation openxlsx can found . openxlsx can installed using install.packages(\"openxlsx\").","code":""},{"path":"https://usepa.github.io/FrEDI/reference/FrEDI-package.html","id":"license","dir":"Reference","previous_headings":"","what":"License","title":"README FrEDI: The Framework for Evaluating Damages and Impacts — FrEDI-package","text":"repository released MIT License.","code":""},{"path":"https://usepa.github.io/FrEDI/reference/FrEDI-package.html","id":"epa-disclaimer","dir":"Reference","previous_headings":"","what":"EPA Disclaimer","title":"README FrEDI: The Framework for Evaluating Damages and Impacts — FrEDI-package","text":"United States Environmental Protection Agency (EPA) GitHub project code provided \"\" basis user assumes responsibility use. EPA relinquished control information longer responsibility protect integrity, confidentiality, availability information. reference specific commercial products, processes, services service mark, trademark, manufacturer, otherwise, constitute imply endorsement, recommendation favoring EPA. EPA seal logo shall used manner imply endorsement commercial product activity EPA United States Government. submitting pull request GitHub /installing package, make agreement EPA submit claim compensation services rendered EPA federal agency. , agree charge time spend developing software code related project federal grant cooperative agreement.","code":""},{"path":[]},{"path":"https://usepa.github.io/FrEDI/reference/FrEDI-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"README FrEDI: The Framework for Evaluating Damages and Impacts — FrEDI-package","text":"Maintainer: Corinne Hartin hartin.corinne@epa.gov (ORCID) (cahartin) Authors: Erin McDuffie mcduffie.erin.e@epa.gov (ORCID) (emcduffie) [contributor] Karen Noiva (ORCID) (knoiva-indecon) [contributor] contributors: Tony Gardella (ORCID) (tonygard-indecon) [contributor] Maddock (ORCID) (maddockw) [contributor] Hugh Easton (ORCID) (heaston-indecon) [contributor]","code":""},{"path":"https://usepa.github.io/FrEDI/reference/gcamScenarios.html","id":null,"dir":"Reference","previous_headings":"","what":"Six driver scenarios that can be passed as inputs to run_fredi() and run_fredi_sv() — gcamScenarios","title":"Six driver scenarios that can be passed as inputs to run_fredi() and run_fredi_sv() — gcamScenarios","text":"dataframe containing six driver scenarios can passed inputs run_fredi() run_fredi_sv(). data frame four columns -- year, temp_C, slr_cm, scenario -- respectively containing:","code":""},{"path":"https://usepa.github.io/FrEDI/reference/gcamScenarios.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Six driver scenarios that can be passed as inputs to run_fredi() and run_fredi_sv() — gcamScenarios","text":"","code":"gcamScenarios"},{"path":"https://usepa.github.io/FrEDI/reference/gcamScenarios.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Six driver scenarios that can be passed as inputs to run_fredi() and run_fredi_sv() — gcamScenarios","text":"data frame 546 rows 4 columns: year Year temp_C Global temperature (degrees Celsius) associated year scenario slr_cm Global Mean Sea Level Rise (centimeters) associated year scenario scenario Associated scenario identifier","code":""},{"path":"https://usepa.github.io/FrEDI/reference/gcamScenarios.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Six driver scenarios that can be passed as inputs to run_fredi() and run_fredi_sv() — gcamScenarios","text":"https://epa.gov/cira/FrEDI/","code":""},{"path":"https://usepa.github.io/FrEDI/reference/gcamScenarios.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Six driver scenarios that can be passed as inputs to run_fredi() and run_fredi_sv() — gcamScenarios","text":"year Common Era (CE) year associated observation. temp_C Global temperature (.e., degrees warming baseline year 1995) degrees Celsius, associated year scenario. slr_cm Global Mean Sea Level Rise (.e., SLR) centimeters associated year scenario. scenario Associated scenario identifier. scenarios dataframe created using Hector, open-source, reduced-form global carbon-cycle climate model (Hartin et al., 2015) model temperatures associated emissions scenarios Global Change Analysis Model v5.3 (GCAM). Global Change Analysis Model v5.3 (GCAM) open source model represents linkages energy, water, land, climate economic systems (Calvin et al., 2019). Scenario identifiers scenario column gcamScenarios() string \"Hector_GCAM_v5.3_ECS_\" prefix, followed average warming temperature suffix \"_REF\" (e.g., \"Hector_GCAM_v5.3_ECS_3.0_REF\" default scenario run_fredi() run_fredi_sv(). six temperature scenarios represent global temperatures; however, run_fredi() run_fredi_sv() require temperature scenarios contiguous U.S. (CONUS). Therefore, use gcamScenarios run_fredi() run_fredi_sv(), users must first convert temperatures temp_C column CONUS temperatures via convertTemps function -- argument = \"global\" (e.g., gcamScenarios |> mutate(temp_C = temp_C |> FrEDI::convertTemps(= \"global\"))). GCAM scenarios can passed directly SV module via driverInput argument (e.g., run_fredi_sv(driverInput = gcamScenarios)), since run_fredi_sv() designed run multiple scenarios. contrast, run_fredi() intended run single scenario; gcamScenarios subset specific scenario passing temperature scenario run_fredi() (e.g., run_fredi(list(tempInput=gcamScenarios |> dplyr::filter(scenario==\"Hector_GCAM_v5.3_ECS_3.0_REF\"))) use default scenario). Calvin, K., Patel, P., Clarke, L., et al. 2019. GCAM v5.1: representing linkages energy, water, land, climate, economic systems, Geosci. Model Dev., 12:677–698. https://doi.org/10.5194/gmd-12-677-2019. Hartin, C.., Patel, P., Schwarber, ., Link, R.P. Bond-Lamberty, B.P., 2015. simple object-oriented open-source model scientific policy analyses global climate system–Hector v1. 0. Geoscientific Model Development, 8(4), pp.939-955.","code":""},{"path":"https://usepa.github.io/FrEDI/reference/get_sectorInfo.html","id":null,"dir":"Reference","previous_headings":"","what":"This function provides information about the sectors in FrEDI. — get_sectorInfo","title":"This function provides information about the sectors in FrEDI. — get_sectorInfo","text":"helper function returns character vector sector names (default) data frame sectors related information (e.g., associated variants, impact types, etc.), user can supply run_fredi() sectorList argument.","code":""},{"path":"https://usepa.github.io/FrEDI/reference/get_sectorInfo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This function provides information about the sectors in FrEDI. — get_sectorInfo","text":"","code":"get_sectorInfo(description = F, gcmOnly = F, slrOnly = F)"},{"path":"https://usepa.github.io/FrEDI/reference/get_sectorInfo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"This function provides information about the sectors in FrEDI. — get_sectorInfo","text":"description = FALSE. Logical value indicating whether include information sector. Returns dataframe description=TRUE returns character vector sector names description=FALSE (default). gcmOnly = FALSE. Logical value indicating whether return sectors climate impacts modeled using global climate model (GCM) results. slrOnly = FALSE. Logical value indicating whether return sectors climate impacts modeled using sea level rise (SLR) scenarios.","code":""},{"path":"https://usepa.github.io/FrEDI/reference/get_sectorInfo.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"This function provides information about the sectors in FrEDI. — get_sectorInfo","text":"description=FALSE (default), outputs character vector containing names sectors available FrEDI. description=TRUE, `, outputs dataframe containing names sectors available FrEDI one column, information sector model type, variants, impact years, impact types remaining columns.","code":""},{"path":"https://usepa.github.io/FrEDI/reference/get_sectorInfo.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"This function provides information about the sectors in FrEDI. — get_sectorInfo","text":"description=FALSE (default), helper function returns character vector sector names, user can supply sectorList argument run_fredi(). description=TRUE, get_sectorInfo() returns dataframe sectors related information returns dataframe containing sectors available FrEDI along additional information. Sector names first column, additional columns associated model type (\"GCM\" \"SLR\"), variants, impact years, impact types remaining columns. Variants, impact years, impact types vary sector. Users can specify whether return GCM sectors SLR sectors setting gcmOnly=TRUE slrOnly=TRUE, respectively. get_sectorInfo() return sectors form specified description (see ).","code":""},{"path":"https://usepa.github.io/FrEDI/reference/get_sectorInfo.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"This function provides information about the sectors in FrEDI. — get_sectorInfo","text":"Environmental Protection Agency (EPA). 2021. Technical Documentation Framework Evaluating Damages Impacts (FrEDI). Technical Report EPA 430-R-21-004, EPA, Washington, DC. Available https://epa.gov/cira/FrEDI/.","code":""},{"path":"https://usepa.github.io/FrEDI/reference/get_sectorInfo.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"This function provides information about the sectors in FrEDI. — get_sectorInfo","text":"","code":"### Return a character vector with the names of all of the sectors in FrEDI: get_sectorInfo() #>  [1] \"ATS Temperature-Related Mortality\"              #>  [2] \"Asphalt Roads\"                                  #>  [3] \"CIL Agriculture\"                                #>  [4] \"CIL Crime\"                                      #>  [5] \"CIL Temperature-Related Mortality\"              #>  [6] \"Climate-Driven Changes in Air Quality\"          #>  [7] \"Coastal Properties\"                             #>  [8] \"Electricity Demand and Supply\"                  #>  [9] \"Electricity Transmission and Distribution\"      #> [10] \"Extreme Temperature\"                            #> [11] \"Inland Flooding\"                                #> [12] \"Labor\"                                          #> [13] \"Marine Fisheries\"                               #> [14] \"Rail\"                                           #> [15] \"Roads\"                                          #> [16] \"Southwest Dust\"                                 #> [17] \"Suicide\"                                        #> [18] \"Transportation Impacts from High Tide Flooding\" #> [19] \"Urban Drainage\"                                 #> [20] \"Valley Fever\"                                   #> [21] \"Vibriosis\"                                      #> [22] \"Water Quality\"                                  #> [23] \"Wildfire\"                                       #> [24] \"Wind Damage\"                                    #> [25] \"Winter Recreation\"                               ### Return a dataframe of all of the sectors in FrEDI (sector names and additional information) get_sectorInfo(description=T, gcmOnly=T) #>                                       sector include model_type byState #> 3          ATS Temperature-Related Mortality       1        GCM       1 #> 2                              Asphalt Roads       1        GCM       1 #> 4                            CIL Agriculture       1        GCM       1 #> 5                                  CIL Crime       1        GCM       1 #> 6          CIL Temperature-Related Mortality       1        GCM       1 #> 1      Climate-Driven Changes in Air Quality       1        GCM       1 #> 8              Electricity Demand and Supply       1        GCM       1 #> 9  Electricity Transmission and Distribution       1        GCM       1 #> 10                       Extreme Temperature       1        GCM       1 #> 12                           Inland Flooding       1        GCM       1 #> 13                                     Labor       1        GCM       1 #> 14                          Marine Fisheries       1        GCM       1 #> 16                                      Rail       1        GCM       1 #> 17                                     Roads       1        GCM       1 #> 18                            Southwest Dust       1        GCM       1 #> 15                                   Suicide       1        GCM       1 #> 19                            Urban Drainage       1        GCM       1 #> 20                              Valley Fever       1        GCM       1 #> 21                                 Vibriosis       1        GCM       1 #> 22                             Water Quality       1        GCM       1 #> 23                                  Wildfire       1        GCM       1 #> 24                               Wind Damage       1        GCM       1 #> 25                         Winter Recreation       1        GCM       1 #>                                                               variants #> 3              Mean, Low Confidence Interval, High Confidence Interval #> 2                                                                  N/A #> 4                    With CO2 Fertilization, Without CO2 Fertilization #> 5                                                                  N/A #> 6            Median, Low Confidence Interval, High Confidence Interval #> 1                                       2011 Emissions, 2040 Emissions #> 8                                                                  N/A #> 9  No Additional Adaptation, Proactive Adaptation, Reactive Adaptation #> 10                                Adaptation, No Additional Adaptation #> 12                                                                 N/A #> 13                                                                 N/A #> 14                                                                 N/A #> 16 No Additional Adaptation, Proactive Adaptation, Reactive Adaptation #> 17 No Additional Adaptation, Proactive Adaptation, Reactive Adaptation #> 18                                                                 N/A #> 15                                                                 N/A #> 19                                                                 N/A #> 20                                                                 N/A #> 21                                                                 N/A #> 22                                                                 N/A #> 23                                                                 N/A #> 24                                                                 N/A #> 25                                                                 N/A #>    impactYears #> 3          N/A #> 2          N/A #> 4          N/A #> 5          N/A #> 6          N/A #> 1          N/A #> 8          N/A #> 9          N/A #> 10  2010, 2090 #> 12         N/A #> 13         N/A #> 14         N/A #> 16         N/A #> 17         N/A #> 18  2010, 2090 #> 15         N/A #> 19         N/A #> 20         N/A #> 21         N/A #> 22         N/A #> 23         N/A #> 24         N/A #> 25  2010, 2090 #>                                                                                   impactTypes #> 3                                                                                         N/A #> 2                                                                                         N/A #> 4                                                               Cotton, Maize, Soybean, Wheat #> 5                                                                           Property, Violent #> 6                                                                                         N/A #> 1                                                                                Ozone, PM2.5 #> 8                                                                                         N/A #> 9                                                                                         N/A #> 10                                                                                  Cold, Hot #> 12                                                                                        N/A #> 13                                                                                        N/A #> 14                                                                                        N/A #> 16                                                                                        N/A #> 17                                                                                        N/A #> 18 Acute Myocardial Infarction, All Cardiovascular, All Mortality, All Respiratory, Asthma ER #> 15                                                                                        N/A #> 19                                                                                        N/A #> 20                                                           Lost Wages, Morbidity, Mortality #> 21                                                  Direct Medical Cost, Lost Days, Mortality #> 22                                                                                        N/A #> 23                                                       Morbidity, Mortality, Response Costs #> 24                                                                                        N/A #> 25                                          Alpine Skiing, Cross-Country Skiing, Snowmobiling  ### Return a character vector with only the names of the temperature-driven sectors: get_sectorInfo(gcmOnly=T) #>  [1] \"ATS Temperature-Related Mortality\"         #>  [2] \"Asphalt Roads\"                             #>  [3] \"CIL Agriculture\"                           #>  [4] \"CIL Crime\"                                 #>  [5] \"CIL Temperature-Related Mortality\"         #>  [6] \"Climate-Driven Changes in Air Quality\"     #>  [7] \"Electricity Demand and Supply\"             #>  [8] \"Electricity Transmission and Distribution\" #>  [9] \"Extreme Temperature\"                       #> [10] \"Inland Flooding\"                           #> [11] \"Labor\"                                     #> [12] \"Marine Fisheries\"                          #> [13] \"Rail\"                                      #> [14] \"Roads\"                                     #> [15] \"Southwest Dust\"                            #> [16] \"Suicide\"                                   #> [17] \"Urban Drainage\"                            #> [18] \"Valley Fever\"                              #> [19] \"Vibriosis\"                                 #> [20] \"Water Quality\"                             #> [21] \"Wildfire\"                                  #> [22] \"Wind Damage\"                               #> [23] \"Winter Recreation\"                          ### Run FrEDI for only the temperature-driven sectors and view results: df_x <- run_fredi(sectorList=get_sectorInfo(gcmOnly=T)) #> Checking input values... #> \tNo temperature scenario provided...using default temperature scenario... #> \tCreating SLR scenario from temperature scenario... #> \tNo GDP scenario provided...Using default GDP scenario... #> \tCreating population scenario from defaults... #> Updating scalars... #> Calculating impacts... #> Formatting results... #>  #> Finished."},{"path":"https://usepa.github.io/FrEDI/reference/get_sv_sectorInfo.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve a character vector of sectors available in the FrEDI Social Vulnerability (SV) module (run_fredi_sv) or a data frame with SV sectors and additional information. — get_sv_sectorInfo","title":"Retrieve a character vector of sectors available in the FrEDI Social Vulnerability (SV) module (run_fredi_sv) or a data frame with SV sectors and additional information. — get_sv_sectorInfo","text":"get_sv_sectorInfo returns character vector names sectors FrEDI Social Vulnerability (SV) module (default) data frame SV sectors additional information (e.g., associated variants, model type, etc.).","code":""},{"path":"https://usepa.github.io/FrEDI/reference/get_sv_sectorInfo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve a character vector of sectors available in the FrEDI Social Vulnerability (SV) module (run_fredi_sv) or a data frame with SV sectors and additional information. — get_sv_sectorInfo","text":"","code":"get_sv_sectorInfo(description = F, gcmOnly = F, slrOnly = F)"},{"path":"https://usepa.github.io/FrEDI/reference/get_sv_sectorInfo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve a character vector of sectors available in the FrEDI Social Vulnerability (SV) module (run_fredi_sv) or a data frame with SV sectors and additional information. — get_sv_sectorInfo","text":"description Logical value indicating whether include information sector. Returns data frame description=TRUE returns character vector sector names description=FALSE (default). gcmOnly Logical value indicating whether return sectors climate impacts modeled using global climate model (GCM) results. slrOnly Logical value indicating whether return sectors climate impacts modeled using sea level rise (SLR) scenarios.","code":""},{"path":"https://usepa.github.io/FrEDI/reference/get_sv_sectorInfo.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve a character vector of sectors available in the FrEDI Social Vulnerability (SV) module (run_fredi_sv) or a data frame with SV sectors and additional information. — get_sv_sectorInfo","text":"get_sv_sectorInfo() return SV sectors form specified description: description=FALSE (default), outputs character vector containing names sectors available FrEDI SV Module. description=TRUE, outputs data frame containing names sectors available FrEDI SV Module one column, information sector model type, model type (\"GCM\" \"SLR\") associated driver unit (\"degrees Celsius\" \"cm\", respectively ), impact units (e.g., mortality, etc.), available variants remaining columns.","code":""},{"path":"https://usepa.github.io/FrEDI/reference/get_sv_sectorInfo.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Retrieve a character vector of sectors available in the FrEDI Social Vulnerability (SV) module (run_fredi_sv) or a data frame with SV sectors and additional information. — get_sv_sectorInfo","text":"get_sv_sectorInfo returns character vector names sectors FrEDI SV module (description=FALSE, default) data frame SV sectors additional information (description=TRUE). description=FALSE (default), get_sv_sectorInfo returns character vector names sectors can passed run_sv_fredi() sector argument. Specify whether return GCM sectors running get_sv_sectorInfo(gcmOnly=TRUE) SLR sectors running get_sv_sectorInfo(slrOnly=TRUE). description=TRUE, get_sv_sectorInfo returns data frame sectors related information, whether particular sector driven primarily temperature (modelType=\"GCM\") sea level rise (modelType=\"SLR\"), associated driver units (\"degrees Celsius\" temperature-driven sectors, \"cm\" SLR-driven sectors), impact units (e.g., mortality, etc.), sector variants. Users can use get_sv_sectorInfo determine sectors can passed run_sv_fredi() sector argument /determine whether particular sector driven primarily temperature (modelType=\"GCM\") sea level rise (modelType=\"SLR\"). Users can specify whether return GCM sectors setting gcmOnly=TRUE SLR sectors setting slrOnly=TRUE.","code":""},{"path":"https://usepa.github.io/FrEDI/reference/get_sv_sectorInfo.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Retrieve a character vector of sectors available in the FrEDI Social Vulnerability (SV) module (run_fredi_sv) or a data frame with SV sectors and additional information. — get_sv_sectorInfo","text":"Environmental Protection Agency (EPA). 2021. Technical Documentation Framework Evaluating Damages Impacts (FrEDI). Technical Report EPA 430-R-21-004, EPA, Washington, DC. Available https://epa.gov/cira/FrEDI/.","code":""},{"path":"https://usepa.github.io/FrEDI/reference/get_sv_sectorInfo.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve a character vector of sectors available in the FrEDI Social Vulnerability (SV) module (run_fredi_sv) or a data frame with SV sectors and additional information. — get_sv_sectorInfo","text":"","code":"### Return a character vector with the names of all of the sectors in the FrEDI SV Module: get_sv_sectorInfo() #> [1] \"Air Quality - Childhood Asthma\"                 #> [2] \"Air Quality - Premature Mortality\"              #> [3] \"Coastal Properties\"                             #> [4] \"Extreme Temperature\"                            #> [5] \"Labor\"                                          #> [6] \"Roads\"                                          #> [7] \"Transportation Impacts from High Tide Flooding\"  ### Return a data frame of all of the sectors in the FrEDI SV Module (sector names and additional information) get_sv_sectorInfo(description=T) #>                                           sector modelType      driverUnit #> 1                 Air Quality - Childhood Asthma       GCM degrees Celsius #> 2              Air Quality - Premature Mortality       GCM degrees Celsius #> 3                             Coastal Properties       SLR              cm #> 4                            Extreme Temperature       GCM degrees Celsius #> 5                                          Labor       GCM degrees Celsius #> 6                                          Roads       GCM degrees Celsius #> 7 Transportation Impacts from High Tide Flooding       SLR              cm #>                                        impactUnit #> 1                          Childhood asthma cases #> 2                             Premature Mortality #> 3 Individuals threatened with total property loss #> 4                                       Mortality #> 5                             Hours of labor lost #> 6                                  Hours of delay #> 7                                  Hours of delay #>                              variants #> 1                                 N/A #> 2                                 N/A #> 3 Without Adaptation, With Adaptation #> 4                                 N/A #> 5                                 N/A #> 6 No Adaptation, Proactive Adaptation #> 7 Without Adaptation, With Adaptation  ### Return a character vector with only the names of the temperature-driven sectors: get_sv_sectorInfo(gcmOnly=T) #> [1] \"Air Quality - Childhood Asthma\"    \"Air Quality - Premature Mortality\" #> [3] \"Extreme Temperature\"               \"Labor\"                             #> [5] \"Roads\"                              ### Return a character vector with only the names of the temperature-driven sectors: get_sv_sectorInfo(slrOnly=T) #> [1] \"Coastal Properties\"                             #> [2] \"Transportation Impacts from High Tide Flooding\""},{"path":"https://usepa.github.io/FrEDI/reference/import_inputs.html","id":null,"dir":"Reference","previous_headings":"","what":"Import custom scenarios for temperature, global mean sea level rise (GMSL), population, and GDP from user-specified file names — import_inputs","title":"Import custom scenarios for temperature, global mean sea level rise (GMSL), population, and GDP from user-specified file names — import_inputs","text":"function enables users import data custom scenarios use run_fredi(). Users specify path names CSV files containing temperature, global mean sea level rise (GMSL), gross domestic product (GDP), state population scenarios. import_inputs() reads format specified files data frames returns list data frames imported scenarios.","code":""},{"path":"https://usepa.github.io/FrEDI/reference/import_inputs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import custom scenarios for temperature, global mean sea level rise (GMSL), population, and GDP from user-specified file names — import_inputs","text":"","code":"import_inputs(   tempfile = NULL,   slrfile = NULL,   gdpfile = NULL,   popfile = NULL,   temptype = \"conus\",   popArea = \"state\" )"},{"path":"https://usepa.github.io/FrEDI/reference/import_inputs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import custom scenarios for temperature, global mean sea level rise (GMSL), population, and GDP from user-specified file names — import_inputs","text":"tempfile=NULL character string indicating location CSV file containing custom temperature scenario. first column CSV named \"year\" contain years associated temperature estimates; second column (named \"temp_C\") contain values temperatures (.e., degrees warming relative baseline year 1995), degrees Celsius. temperature scenario must start 2000 earlier end maximum model run year (e.g., specified maxYear argument run_fredi()). slrfile=NULL character string indicating location CSV file containing custom sea level rise scenario. first column CSV named \"year\" contain years associated sea level rise estimates; second column named \"slr_cm\" contain values global mean sea level rise (GMSL), centimeters, baseline year 2000. SLR scenario must start 2000 earlier end maximum model run year (e.g., specified maxYear argument run_fredi()). gdpfile=NULL character string indicating location CSV file containing custom scenario U.S. gross domestic product (GDP). first column CSV named \"year\" contains years associated GDP estimates; second column (named \"gdp_usd\") contain values U.S. GDP 2015 U.S. dollars  (2015$ USD). GDP scenario must start 2010 earlier end maximum model run year (e.g., specified maxYear argument run_fredi()). Values GDP column \"gdp_usd\" must greater equal zero. popfile=NULL character string indicating location CSV file containing custom population scenario states NCA regions. first column named \"year\" contain years interval 2010 2300. second column called \"pop\" contain population values. Whether third column required depends geographical scale data, specified popArea argument (information, see popArea argument, . popArea = \"state\", third column called \"state\" contain name state associated population estimate given year. popArea = \"regional\", third column called \"region\" contain NCA Region label associated population estimate given year. popArea = \"national\", year pop columns required. popArea = \"state\", file must contain estimates CONUS states -- .e., states except Alaska Hawaii must present input file (estimates Alaska Hawaii optional). popArea = \"regional\", file must contain estimates seven NCA regions. population scenario must start 2010 earlier end maximum model run year (e.g., specified maxYear argument run_fredi()). Values population column \"pop\" must greater equal zero. temptype=\"conus\" character string indicating whether temperature values temperature input file (specified tempfile) represent temperature changes, degrees Celsius, global level (temptype = \"global\") contiguous U.S. (CONUS) (temptype = \"conus\", default). popArea=\"state\" character string indicating geographical scale population inputs (specified popfile). Specify one : \"state\", state-level population (default); \"conus\", contiguous U.S. (CONUS) (.e., national totals, excluding Alaska Hawaii); \"national\", national totals (CONUS population, including Alaska Hawaii).","code":""},{"path":"https://usepa.github.io/FrEDI/reference/import_inputs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Import custom scenarios for temperature, global mean sea level rise (GMSL), population, and GDP from user-specified file names — import_inputs","text":"import_inputs() returns list named elements containing data frames custom scenarios temperature, GMSL, GDP, regional population, respectively:","code":""},{"path":"https://usepa.github.io/FrEDI/reference/import_inputs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Import custom scenarios for temperature, global mean sea level rise (GMSL), population, and GDP from user-specified file names — import_inputs","text":"function enables users import data custom scenarios use temperature binning. Users specify path names CSV files containing temperature, global mean sea level rise (GMSL), population, gross domestic product (GDP) scenarios (tempfile, slrfile, gdpfile, popfile, respectively). import_inputs() reads formats specified files data frames returns list data frames imported scenarios. CSV files contain estimates aligned requirements run_fredi() `` Temperature Scenario. file specified tempfile must two columns -- \"year\" \"temp_C\" -- respectively containing years associated temperature estimates temperatures (.e., degrees warming) degrees Celsius relative baseline year 1995 (.e., central year 1986-2005 reference period). values \"temp_C\" global rather CONUS-specific temperatures, users specify temptype = \"global\" running import_inputs(), import_inputs() convert temperatures CONUS using convertTemps (argument = \"global\"). Temperature inputs run_fredi() must least one non-missing value 2000 earlier least one non-missing value final analysis year (specified run_fredi() maxYear argument). SLR Scenario. file specified slrfile must two columns -- \"year\" \"slr_cm\" -- respectively containing years associated GMSL estimates GMSL estimates, centimeters, 2000 baseline year. GMSL heights must greater equal zero. SLR scenario must least one non-missing value 2000 earlier least one non-missing value final analysis year (specified run_fredi() maxYear argument). GDP Scenario. file specified gdpfile must two columns -- \"year\" \"gdp_usd\" -- respectively containing years associated GDP estimates estimates U.S. GDP, 2015$. GDP values must greater equal zero. GDP scenario must least one non-missing value 2010 earlier least one non-missing value final analysis year (specified run_fredi() maxYear argument). Population Scenario. file specified popfile population must least two columns -- \"year\" \"pop\" -- respectively containing years associated population estimates population estimates. requires state-level population values. Whether third column required depends geographical scale data, specified popArea argument. popArea = \"state\", third column called \"state\" contain name state associated population estimate given year. popArea = \"regional\", third column called \"region\" contain NCA Region label associated population estimate given year. popArea = \"national\", year pop columns required. popArea = \"state\", file must contain estimates CONUS states -- .e., states except Alaska Hawaii must present input file (estimates Alaska Hawaii optional). popArea = \"regional\", file must contain estimates seven NCA regions. population scenario must start 2010 earlier end maximum model run year (e.g., specified maxYear argument run_fredi()). Population values must greater equal zero. Population estimates must least one non-missing value 2010 earlier least one non-missing value final analysis year (specified run_fredi() maxYear argument). run_fredi() requires population scenario state level. population scenario supplied import_inputs() geographical scale state level (.e., popArea = \"national\", popArea = \"area\", popArea = \"regional\"), import_inputs() calculate state-level estimates provided data: popArea = \"national\", import_inputs() use historical U.S. Census data period 2010--2023 allocate total national population CONUS non-CONUS regions (.e., Alaska Hawaii); U.S. Census values 2023 applied allocations years 2023. import_inputs() uses ICLUS data projections period 2010--2100 allocate CONUS population specific NCA regions; ICLUS values 2100 applied allocations years 2100. popArea = \"national\" popArea = \"regional\", import_inputs() uses ICLUS data projections period 2010--2100 allocate population NCA region associated states; ICLUS values 2100 applied allocations years 2100. import_inputs() outputs list data frame objects can passed main FREDI function run_fredi() using inputList argument. example, specify run_fredi(inputsList = x) generate impacts custom scenario x (x list data frames output import_inputs()) (see run_fredi()). inputs import_inputs() optional. user specify file path tempfile, slrfile, gdpfile, popfile (errors reading inputs file path), import_inputs() outputs list NULL value associated list element. reading data specified CSV files, import_inputs() performs basic checks also return NULL value particular list element checks fail. using import_inputs() run_fredi(), run_fredi() defaults back default scenarios elements inputs list NULL missing. words, running run_fredi(inputsList = list()) returns outputs running run_fredi() (see run_fredi()).","code":""},{"path":"https://usepa.github.io/FrEDI/reference/import_inputs.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Import custom scenarios for temperature, global mean sea level rise (GMSL), population, and GDP from user-specified file names — import_inputs","text":"Environmental Protection Agency (EPA). 2021. Technical Documentation Framework Evaluating Damages Impacts (FrEDI). Technical Report EPA 430-R-21-004, EPA, Washington, DC. Available https://epa.gov/cira/FrEDI/. United Nations. 2015. World population prospects: 2015 revision. New York: United Nations, Department Economic Social Affairs, Population Division. U.S. Census Bureau. 2021. State Population Totals Components Change: 2010--2019. Available https://www.census.gov/data/tables/time-series/demo/popest/2010s-state-total.html. U.S. Census Bureau. 2023. State Population Totals Components Change: 2020--2023. Available https://www.census.gov/data/tables/time-series/demo/popest/2020s-state-total.html. U.S. Census Bureau. 2023. 2023 National Population Projections Tables: Main Series. Available https://www.census.gov/data/tables/2023/demo/popproj/2023-summary-tables.html.","code":""},{"path":"https://usepa.github.io/FrEDI/reference/import_inputs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Import custom scenarios for temperature, global mean sea level rise (GMSL), population, and GDP from user-specified file names — import_inputs","text":"","code":"### Path to example scenarios scenariosPath <- system.file(package=\"FrEDI\") |> file.path(\"extdata\",\"scenarios\")  ### View example scenario names scenariosPath |> list.files() #> [1] \"GCAM_scenario.csv\"          \"State ICLUS Population.csv\" #> [3] \"slr_from_GCAM.csv\"           ### SLR Scenario File Name slrInputFile  <- scenariosPath |> file.path(\"slr_from_gcam.csv\")  ### Population Scenario File Name popInputFile  <- scenariosPath |> file.path(\"State ICLUS Population.csv\")  ### Import inputs example_inputsList <- import_inputs(slrfile=slrInputFile, popfile=popInputFile, popArea=\"state\") #>  #> In import_inputs(): #> \tLoading data... #> \tUser specified slrfile... #> \t\tImporting data from C:/Program Files/R/R-4.4.0/library/FrEDI/extdata/scenarios/slr_from_gcam.csv... #> \t\tData loaded. #> \tUser specified popfile... #> \t\tImporting data from C:/Program Files/R/R-4.4.0/library/FrEDI/extdata/scenarios/State ICLUS Population.csv... #> \t\tData loaded. #>  #> \tChecking input values... #>  #> \t\tChecking input values for slr inputs... #> \t\tValues passed. #>  #> \t\tChecking input values for pop inputs... #> \t\t\tColumn \"pop\" not found in popfile data! #> \t\t\tLooking for columns with matches to the string \"pop\"...1 match found! #> \t\t\tUsing column \"state_pop\", and renaming to \"state_pop\"... #> \t\tValues passed. #>  #> Finished.  ### Use imports with FREDI: df_x <- run_fredi(inputsList=example_inputsList) #> Checking input values... #> \tNo temperature scenario provided...using default temperature scenario... #> \tCreating SLR scenario from user inputs... #> \tNo GDP scenario provided...Using default GDP scenario... #> \tCreating population scenario from user inputs... #> Updating scalars... #> Calculating impacts... #> Formatting results... #>  #> Finished."},{"path":"https://usepa.github.io/FrEDI/reference/popScenario.html","id":null,"dir":"Reference","previous_headings":"","what":"Population scenario to use as an input to run_fredi() and run_fredi_sv() — popScenario","title":"Population scenario to use as an input to run_fredi() and run_fredi_sv() — popScenario","text":"dataframe containing population scenario passed input run_fredi() run_fredi_sv().","code":""},{"path":"https://usepa.github.io/FrEDI/reference/popScenario.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Population scenario to use as an input to run_fredi() and run_fredi_sv() — popScenario","text":"","code":"popScenario"},{"path":"https://usepa.github.io/FrEDI/reference/popScenario.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Population scenario to use as an input to run_fredi() and run_fredi_sv() — popScenario","text":"data frame 14,259 rows 5 columns: year Year region Region U.S. (\"Midwest\", \"Northeast\", \"Northern Plains\", \"Northwest\", \"Southeast\", \"Southern Plains\", \"Southwest\") state One 48 contiguous U.S. states District Columbia postal Postal code abbreviation associated state state_pop State population associated region year","code":""},{"path":"https://usepa.github.io/FrEDI/reference/popScenario.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Population scenario to use as an input to run_fredi() and run_fredi_sv() — popScenario","text":"https://epa.gov/cira/FrEDI/","code":""},{"path":"https://usepa.github.io/FrEDI/reference/popScenario.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Population scenario to use as an input to run_fredi() and run_fredi_sv() — popScenario","text":"dataframe contains population projections state level Integrated Climate Land Use Scenarios version 2 (ICLUSv2) model (Bierwagen et al, 2010; EPA 2017) Median variant projection United Nations (2015). Bierwagen, B., D. M. Theobald, C. R. Pyke, . Choate, P. Groth, J. V. Thomas, P. Morefield. 2010. “National housing impervious surface scenarios integrated climate impact assessments.” Proc. Natl. Acad. Sci. 107 (49): 20887–20892. https://doi.org/10.1073/pnas.1002096107. EPA. 2017. Multi-Model Framework Quantitative Sectoral Impacts Analysis: technical report Fourth National Climate Assessment. U.S. Environmental Protection Agency, EPA 430-R-17-001. United Nations. 2015. World population prospects: 2015 revision. New York: United Nations, Department Economic Social Affairs, Population Division.","code":""},{"path":"https://usepa.github.io/FrEDI/reference/run_fredi.html","id":null,"dir":"Reference","previous_headings":"","what":"Project annual average climate change impacts throughout the 21st century for available sectors — run_fredi","title":"Project annual average climate change impacts throughout the 21st century for available sectors — run_fredi","text":"function allows users project annual average climate change impacts 2100 (2010-2100) available sectors, option extend results 2300 (2010-2300). Users may specify custom temperature, U.S. population, GDP scenarios. output R data frame object containing annual average impacts, year, sector, variant, impact type, region, state, model. FrEDI Version 4.1.0, run_fredi() calculates impacts state-level available sectors.","code":""},{"path":"https://usepa.github.io/FrEDI/reference/run_fredi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Project annual average climate change impacts throughout the 21st century for available sectors — run_fredi","text":"","code":"run_fredi(   inputsList = list(tempInput = NULL, slrInput = NULL, gdpInput = NULL, popInput = NULL),   sectorList = NULL,   aggLevels = c(\"national\", \"modelaverage\", \"impactyear\", \"impacttype\"),   elasticity = 1,   maxYear = 2100,   thru2300 = FALSE,   outputList = FALSE,   allCols = FALSE,   silent = TRUE )"},{"path":"https://usepa.github.io/FrEDI/reference/run_fredi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Project annual average climate change impacts throughout the 21st century for available sectors — run_fredi","text":"inputsList=NULL list named elements named elements (names(inputsList) = c(\"tempInput\", \"slrInput\", \"gdpInput\", \"popInput\")), containing data frames custom temperature, global mean sea level rise (GMSL), gross domestic product (GDP), /state-level population trajectories, respectively, continuous period range 2010 2300. Temperature sea level rise inputs start 2000 earlier. Values population GDP scenarios can start 2010 earlier. Values scenario type must within reasonable ranges. information, see import_inputs(). sectorList=NULL character vector indicating selection sectors calculate results (see get_sectorInfo()). NULL, sectors included (.e., sectorList = get_sectorInfo()). aggLevels=\"\" Levels aggregation summarize data: one c(\"national\", \"modelaverage\", \"impactyear\", \"impacttype\", \"\", \"none\"). Defaults levels (.e., aggLevels = \"\"). Uses aggregation levels aggregate_impacts(). Note , \"impacttype\" aggLevels (e.g., aggLevels = \"\"), columns \"physical_measure\" \"physical_impacts\" dropped results data frame. aggregating impact types sectors requires summing costs different types physical impacts, reporting physical impacts nonsensical. elasticity=1 numeric value indicating elasticity use adjusting VSL applicable sectors impacts (defaults elasticity = 1). Applicable sectors impacts : Climate-Driven Changes Air Quality (impact types), ATS Temperature-Related Mortality (impactType = \"N/\"; .e., impact types), CIL Temperature-Related Mortality, Extreme Temperature (impact types), Suicide (impactType = \"N/\"; .e., impact types), Southwest Dust (impactType = \"Mortality\"), Valley Fever (impactType = \"Mortality\"), Vibriosis (impactType = \"N/\"; .e., impact types), Wildfire (impactType = \"Mortality\"). maxYear=2100 numeric value indicating maximum year analysis. range maxYear [2011, 2300]. Defaults maxYear = 2100. thru2300=FALSE  TRUE/FALSE shortcut overrides maxYear argument run model 2300. Defaults thru2300 = FALSE. outputList=FALSE  TRUE/FALSE value indicating whether output results data frame object (outputList = FALSE, default) return list objects (outputList = TRUE) includes information model provenance (including input arguments input scenarios) along data frame results. allCols=FALSE TRUE/FALSE value indicating whether include intermediate column values results (e.g., physical economic multipliers). Used testing. Note aggregation levels must set aggLevels = \"none\" properly return intermediate columns. Defaults allCols = FALSE). silent=TRUE TRUE/FALSE value indicating level messaging desired user (default=TRUE).","code":""},{"path":"https://usepa.github.io/FrEDI/reference/run_fredi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Project annual average climate change impacts throughout the 21st century for available sectors — run_fredi","text":"outputList=FALSE, output run_fredi() data frame object (described ) containing annual average impacts analysis period, sector, variant, impact type, impact year, region, state, model (GCM name temperature-driven sectors \"Interpolation\" SLR-driven sectors). outputList=TRUE, run_fredi() returns list object containing following: statusList. list values arguments passed run_fredi() (including defaults unspecified). argsList. list elements named run_fredi() arguments, containing values arguments passed run_fredi() (default values unspecified). scenarios. list named elements \"temp\", \"slr\", \"gdp\", \"pop\" -- containing scenarios temperature, SLR, GDP, population used model calculating impacts. results. Containing data frame annual impacts (.e., data frame returned outputList = FALSE).","code":""},{"path":"https://usepa.github.io/FrEDI/reference/run_fredi.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Project annual average climate change impacts throughout the 21st century for available sectors — run_fredi","text":"function allows users project annual average climate change impacts 2300 (2010-2300) available sectors. run_fredi() main function FrEDI R package, described elsewhere (See https://epa.gov/cira/FrEDI information). Users can specify optional list custom scenarios inputsList (information format inputs, see import_inputs()). function import_inputs() can used importing custom scenarios CSV files. import_inputs() returns list elements tempInput, slrInput, gdpInput, popInput, containing data frame custom scenario temperature, GMSL, GDP, state-level population, respectively. user imports scenarios using import_inputs(), can pass outputs import_inputs() directly run_fredi() argument inputsList. Note documentation import_inputs() can also provide additional guidance specification formats scenario type. inputsList = NULL, run_fredi() uses defaults temperature, SLR, GDP, population. Otherwise, run_fredi() looks list object passed argument inputsList. Within list, run_fredi() looks list elements tempInput, slrInput, gdpInput, popInput containing data frames custom scenarios temperature, GMSL, GDP, state population, respectively. run_fredi() default back default scenarios list elements empty NULL (words, running run_fredi(inputsList = list()) returns outputs running run_fredi()). Temperature Inputs. input temperature scenario requires CONUS temperatures degrees Celsius relative 1995 (degrees warming relative baseline year--.e., central year 1986-2005 baseline). CONUS temperature values must greater equal zero degrees Celsius. Users can convert global temperatures CONUS temperatures using convertTemps(= \"global\") (specifying import_inputs(temptype = \"global\") using import_inputs() import temperature scenario CSV file). tempInput requires data frame object two columns names \"year\", \"temp_C\" containing year CONUS temperatures degrees Celsius, respectively. Temperature inputs must least one non-missing value 2000 earlier least one non-missing value final analysis year (specified maxYear). user specify input scenario temperature (.e., inputsList = list(tempInput = NULL), run_fredi() uses default temperature scenario. SLR Inputs. input SLR scenario requires values changes global mean sea level rise (GMSL) heights centimeters (cm). GMSL heights must greater equal zero. slrInput requires data frame object two columns names \"year\", \"slr_cm\" containing year global mean sea level rise (GMSL) centimeters, respectively. SLR inputs must least one non-missing value 2000 earlier least one non-missing value final analysis year (specified maxYear). user specify input scenario SLR (.e., inputsList = list(slrInput = NULL), run_fredi() first converts input default CONUS temperature scenario global temperatures (using convertTemps()) converts global temperatures global mean sea level rise (GMSL) height centimeters (using temps2slr()). GDP Inputs. input scenario gross domestic product (GDP) requires national GDP values 2015$. GDP values must greater equal zero. gdpInput requires data frame object two columns names \"year\", \"gdp_usd\" containing year national GDP, respectively. GDP values must greater equal zero. GDP inputs must least one non-missing value 2010 earlier least one non-missing value final analysis year (specified maxYear). user specify input scenario GDP (.e., inputsList = list(gdpInput = NULL), run_fredi() uses default GDP scenario. Population Inputs. input population scenario requires state-level population values. Population values must greater equal zero. popInput requires data frame object five columns names \"region\", \"state\", \"postal\", \"year\", \"state\" containing year, NCA region name, state name, postal code abbreviation state, state population, respectively. Population inputs must least one non-missing value 2010 earlier least one non-missing value final analysis year (specified maxYear). user specify input scenario population (.e., inputsList = list(popInput = NULL), run_fredi() uses default population scenario. run_fredi() linearly interpolates missing annual values input scenarios using non-missing values (scenario requires least two non-missing values detailed scenario type). interpolation input scenarios, run_fredi() subsets input scenarios values within analysis period. Temperatures interpolated using 1995 baseline year (.e., central year 1986-2005 baseline) GMSL interpolated using 2000 baseline year. words, temperature (degrees Celsius) set zero year 1995, whereas GMSL set zero year 2000. interpolated temperature GMSL scenarios combined column called driverValue, along additional columns year, driver unit (column \"driverUnit\", driverUnit = \"degrees Celsius\" driverUnit = \"cm\" temperature- SLR-driven sectors, respectively), associated model type (column \"model_type\", model_type = \"GCM\" model_type = \"SLR\" temperature- SLR-driven sectors, respectively run_fredi() calculations national population state-level values calculates GDP per capita values GDP national population. Values state population, national population, national GDP (2015$), national per capita GDP (2015$/capita) provided results data frame columns \"state_pop\", \"national_pop\", \"gdp_usd\", \"gdp_percap\", respectively. default, run_fredi() calculate impacts sectors included tool. Alternatively, users can pass character vector specifying single sector subset sectors using sectorList argument. see list sectors included within FrEDI, run get_sectorInfo(). sectorList = NULL (default), sectors included. default, run_fredi() calculates impacts starting year 2010 ending 2100. Specify alternative end year analysis using maxYear argument. maxYear default value 2100 minimum maximum values 2011 2300, respectively. Alternatively, users can set argument thru2300 = TRUE override maxYear argument set maxYear = 2300. Note default scenarios included within FrEDI stop year 2100; users must provide custom input scenarios desired end year specify maxYear >= 2100 (maxYear <= 2300) order return non-missing values years 2100. Annual impacts sector, variant, impact type, impact year combination included model calculated multiplying scaled climate impacts physical scalar economic scalars multipliers. sectors use Value Statistical Life (VSL) adjust value non-linearly time. run_fredi() uses default value elasticity = 1to adjust VSL applicable sectors impacts (default value elasticity = 1 keeps VSL constant time). custom elasticity can passed elasticity argument. Applicable sectors impacts *Climate-Driven Changes Air Quality (impact types), ATS Temperature-Related Mortality  (impactType = \"N/\"; .e., impact types), CIL Temperature-Related Mortality, Extreme Temperature (impact types), Suicide (impactType = \"N/\"; .e., impact types), Southwest Dust (impactType = \"Mortality\"), Valley Fever (impactType = \"Mortality\"), Vibriosis (impactType = \"N/\"; .e., impact types), Wildfire (impactType = \"Mortality\"). run_fredi() aggregates summarizes results level(s) aggregation specified user (passed aggLevels) using post-processing helper function aggregate_impacts(). Users can specify aggregation levels specifying aggLevels = \"\" (default) aggregation levels (aggLevels = \"none\"). Users can specify single aggregation level multiple aggregation levels passing single character string character vector aggLevels. Options aggregation include calculating national totals (aggLevels = \"national\"), averaging across model types models (aggLevels = \"modelaverage\"), summing impact types (aggLevels = \"impacttype\"), interpolating impact year estimates (aggLevels = \"impactYear\"). user specifies aggLevels = \"none\", run_fredi() returns data frame columns: \"sector\", \"variant\", \"impactType\", \"impactYear\", \"region\", \"state\", \"postal\", \"model_type\", \"model\", \"sectorprimary\", \"includeaggregate\", \"physicalmeasure\", \"driverType\", \"driverUnit\", \"driverValue\", \"gdp_usd\", \"national_pop\", \"gdp_percap\", \"state_pop\", \"year\", \"physical_impacts\", \"annual_impacts\". Columns \"sector\", \"variant\", \"impactType\", \"impactYear\", \"region\", \"state\", \"postal\", \"model_type\", \"model\" contain observation identifiers (sector name, variant, impact type, impact year, region, state, state postal code abbreviation, model type, model, respectively). Columns \"sectorprimary\" \"includeaggregate\" contain values provide information treat sectors aggregating sectors (e.g., summing impacts across sectors). Note FrEDI currently provide functionality aggregate sectors; information provided user convenience. Column \"sectorprimary\" contains values indicating variant use primary one sector: sectorprimary = 1for primary variants sectorprimary = 0 non-primary variants. aggregating impacts sectors, users filter outputs run_fredi() variants sectorprimary == 1. Column \"includeaggregate\" contains values provide information treat sectors aggregating sectors (e.g., summing impacts across sectors). Sectors value includeaggregate == 0 dropped aggregating results sectors, avoid potential double-counting impacts similar sectors. instance, sectors ATS Temperature-Related Mortality, CIL Temperature-Related Mortality, Extreme Temperature values temperature-related mortality. avoid double counting, outputs run_fredi() filtered values includeaggregate > 0. Sectors value includeaggregate > 0 can included aggregating sectors; sectors value includeaggregate > 0 value includeaggregate = 1. Values includeaggregate > 1 flag additional information sectors; currently, Suicide sector value includeaggregate > 1, value includeaggregate = 2. flag indicates impacts Suicide can included summing values across sectors, may overlap impacts ATS Temperature-Related Mortality. information potential overlap impacts ATS Temperature-Related Mortality Suicide, visit technical documentation https://epa.gov/cira/FrEDI/, Columns \"driverType\", \"driverUnit\", \"driverValue\" contain information temperature SLR scenarios. Columns \"gdp_usd\", \"national_pop\", \"gdp_percap\", \"state_pop\" contain information GDP population scenarios. Columns \"physicalmeasure\" \"physical_impacts\" contain information physical impacts. Column \"annual_impacts\" contains information economic value associated annual impacts. user specifies aggLevels = \"\" combinations aggregation levels, run_fredi() passes results data frame aggLevels argument aggregate_impacts() function. aggregate_impacts() performs following calculations, using default grouping columns aggregate_impacts(): \"sector\", \"variant\", \"impactType\", \"impactYear\", \"region\", \"state\", \"postal\", \"model_type\", \"model\", \"sectorprimary\", \"includeaggregate\", \"physicalmeasure\", \"year\" (note \"variant\" column referred contains information variant name (“N/”), applicable). aggregating values, aggregate_impacts() joins data frame impacts information \"driverType\", \"driverUnit\", \"driverValue\", \"gdp_usd\", \"national_pop\", \"gdp_percap\", \"state_pop\". outputList = FALSE (default), run_fredi() returns data frame annual average impacts analysis period, sector, variant, impact type, impact year, region, state, model type (\"GCM\" \"SLR\"), model. outputList = TRUE, addition data frame impacts, run_fredi() returns list object containing information values function arguments, driver scenarios, population GDP scenarios.","code":""},{"path":"https://usepa.github.io/FrEDI/reference/run_fredi.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Project annual average climate change impacts throughout the 21st century for available sectors — run_fredi","text":"Environmental Protection Agency (EPA). 2021. Technical Documentation Framework Evaluating Damages Impacts (FrEDI). Technical Report EPA 430-R-21-004, EPA, Washington, DC. Available https://epa.gov/cira/FrEDI/.","code":""},{"path":"https://usepa.github.io/FrEDI/reference/run_fredi.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Project annual average climate change impacts throughout the 21st century for available sectors — run_fredi","text":"","code":"### Load FrEDI require(FrEDI)  ### Run function with defaults (same as `defaultResults` dataset) run1 <- run_fredi() #> Checking input values... #> \tNo temperature scenario provided...using default temperature scenario... #> \tCreating SLR scenario from temperature scenario... #> \tNo GDP scenario provided...Using default GDP scenario... #> \tCreating population scenario from defaults... #> Updating scalars... #> Calculating impacts... #> Formatting results... #>  #> Finished.  ### Load climate scenarios and glimpse data data(\"gcamScenarios\") gcamScenarios |> glimpse() #> Rows: 606 #> Columns: 4 #> $ year     <int> 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2… #> $ temp_C   <dbl> 0.1269649, 0.1575513, 0.1858310, 0.2101611, 0.2306551, 0.2444… #> $ slr_cm   <dbl> 0.0000000, 0.2727356, 0.5552278, 0.8458496, 1.1430287, 1.4440… #> $ scenario <chr> \"Hector_GCAM_v5.3_ECS_3.0_REF\", \"Hector_GCAM_v5.3_ECS_3.0_REF…  ### Load population scenario and glimpse data data(popScenario) popScenario |> glimpse() #> Rows: 14,259 #> Columns: 5 #> $ year      <dbl> 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, … #> $ region    <chr> \"Southeast\", \"Southeast\", \"Southeast\", \"Southeast\", \"Southea… #> $ state     <chr> \"Alabama\", \"Alabama\", \"Alabama\", \"Alabama\", \"Alabama\", \"Alab… #> $ postal    <chr> \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", \"AL\", … #> $ state_pop <dbl> 4779736, 4823623, 4867509, 4911396, 4955282, 4999169, 503604…  ### Subset climate scenario temps1 <- gcamScenarios |> filter(scenario==\"Hector_GCAM_v5.3_ECS_3.0_ref\") temps1 <- temps1 |> mutate(temp_C = temp_C_global |> convertTemps(from=\"global\")) #> Error in mutate(temps1, temp_C = convertTemps(temp_C_global, from = \"global\")): ℹ In argument: `temp_C = convertTemps(temp_C_global, from = \"global\")`. #> Caused by error: #> ! object 'temp_C_global' not found temps1 <- temps1 |> select(year, temp_C)  ### Run custom scenario run2 <- run_fredi(inputsList=list(tempInput=temps1, popInput=popScenario)) #> Checking input values... #> \tCreating temperature scenario from user inputs... #> Error in map(regions0, function(region_i) {    df_i <- filter(data, region == region_i)    x_i <- df_i[[\"year\"]]    y_i <- df_i[[column0]]    new_i <- approx(x = x_i, y = y_i, xout = years, rule = rule,         method = method)    new_i <- as_tibble(new_i)    new_i <- rename_at(new_i, c(cols0), ~cols1)    new_i <- mutate(new_i, region = region_i)    return(new_i)}): ℹ In index: 1. #> Caused by error in `approx()`: #> ! need at least two non-NA values to interpolate  ### Load scenarios from file: scenariosPath <- system.file(package=\"FrEDI\") |> file.path(\"extdata\",\"scenarios\") scenariosPath |> list.files() #> [1] \"GCAM_scenario.csv\"          \"State ICLUS Population.csv\" #> [3] \"slr_from_GCAM.csv\"            ### SLR Scenario File Name slrInputFile  <- scenariosPath |> file.path(\"slr_from_GCAM.csv\")  ### Population Scenario File Name popInputFile  <- scenariosPath |> file.path(\"State ICLUS Population.csv\")  ### Import inputs x_inputs <- import_inputs(slrfile=slrInputFile, popfile=popInputFile, popArea=\"state\") #>  #> In import_inputs(): #> \tLoading data... #> \tUser specified slrfile... #> \t\tImporting data from C:/Program Files/R/R-4.4.0/library/FrEDI/extdata/scenarios/slr_from_GCAM.csv... #> \t\tData loaded. #> \tUser specified popfile... #> \t\tImporting data from C:/Program Files/R/R-4.4.0/library/FrEDI/extdata/scenarios/State ICLUS Population.csv... #> \t\tData loaded. #>  #> \tChecking input values... #>  #> \t\tChecking input values for slr inputs... #> \t\tValues passed. #>  #> \t\tChecking input values for pop inputs... #> \t\t\tColumn \"pop\" not found in popfile data! #> \t\t\tLooking for columns with matches to the string \"pop\"...1 match found! #> \t\t\tUsing column \"state_pop\", and renaming to \"state_pop\"... #> \t\tValues passed. #>  #> Finished.  ### Run custom scenarios run3 <- run_fredi(inputsList=x_inputs) #> Checking input values... #> \tNo temperature scenario provided...using default temperature scenario... #> \tCreating SLR scenario from user inputs... #> \tNo GDP scenario provided...Using default GDP scenario... #> \tCreating population scenario from user inputs... #> Updating scalars... #> Calculating impacts... #> Formatting results... #>  #> Finished.  ### Get information on sectors: get_sectorInfo() #>  [1] \"ATS Temperature-Related Mortality\"              #>  [2] \"Asphalt Roads\"                                  #>  [3] \"CIL Agriculture\"                                #>  [4] \"CIL Crime\"                                      #>  [5] \"CIL Temperature-Related Mortality\"              #>  [6] \"Climate-Driven Changes in Air Quality\"          #>  [7] \"Coastal Properties\"                             #>  [8] \"Electricity Demand and Supply\"                  #>  [9] \"Electricity Transmission and Distribution\"      #> [10] \"Extreme Temperature\"                            #> [11] \"Inland Flooding\"                                #> [12] \"Labor\"                                          #> [13] \"Marine Fisheries\"                               #> [14] \"Rail\"                                           #> [15] \"Roads\"                                          #> [16] \"Southwest Dust\"                                 #> [17] \"Suicide\"                                        #> [18] \"Transportation Impacts from High Tide Flooding\" #> [19] \"Urban Drainage\"                                 #> [20] \"Valley Fever\"                                   #> [21] \"Vibriosis\"                                      #> [22] \"Water Quality\"                                  #> [23] \"Wildfire\"                                       #> [24] \"Wind Damage\"                                    #> [25] \"Winter Recreation\"                               ### Run for a single sector, with default inputs, no aggregation, and elasticity=1: run4 <- run_fredi(sectorList=\"ATS Temperature-Related Mortality\", aggLevels=\"none\", elasticity=1) #> Checking input values... #> \tNo temperature scenario provided...using default temperature scenario... #> \tCreating SLR scenario from temperature scenario... #> \tNo GDP scenario provided...Using default GDP scenario... #> \tCreating population scenario from defaults... #> Updating scalars... #> Calculating impacts... #> Formatting results... #>  #> Finished.  ### Set end year for analysis to 2110 -- messages user and returns a null value since default scenarios only have values out to 2100 run5 <- run_fredi(maxYear=2110) #> Checking input values... #> \tNo temperature scenario provided...using default temperature scenario... #> \tTemperature scenario must have at least one non-missing value in or after the year 2110... #>  #> Exiting...  ### Set end year for analysis to 2300 -- messages user and returns a null value since default scenarios only have values out to 2100) run6 <- run_fredi(thru2300=TRUE) #> Checking input values... #> \tNo temperature scenario provided...using default temperature scenario... #> \tTemperature scenario must have at least one non-missing value in or after the year 2300... #>  #> Exiting..."},{"path":"https://usepa.github.io/FrEDI/reference/run_fredi_sv.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate climate change impacts on socially vulnerable (SV) populations throughout the 21st century for available sectors — run_fredi_sv","title":"Calculate climate change impacts on socially vulnerable (SV) populations throughout the 21st century for available sectors — run_fredi_sv","text":"run_fredi_sv allows users project annual average climate change impacts throughout 21st century (2010-2100) socially vulnerable (SV) populations available sectors. Users can run run_fredi_sv() individual sectors generate annual physical impacts SV populations. run_fredi_sv() can run default population climate (temperature sea level rise trajectories) using custom trajectories. output run_fredi_sv() R data frame object containing annual average physical impacts five-year increments period 2010 2100. basic structure, specific methodology, underlying data supporting FrEDI-SV derived EPA’s independently peer-reviewed September 2021 report, Climate Change Social Vulnerability United States: Focus Six Impacts","code":""},{"path":"https://usepa.github.io/FrEDI/reference/run_fredi_sv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate climate change impacts on socially vulnerable (SV) populations throughout the 21st century for available sectors — run_fredi_sv","text":"","code":"run_fredi_sv(   sector = NULL,   driverInput = NULL,   popInput = NULL,   silent = TRUE,   .testing = FALSE )"},{"path":"https://usepa.github.io/FrEDI/reference/run_fredi_sv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate climate change impacts on socially vulnerable (SV) populations throughout the 21st century for available sectors — run_fredi_sv","text":"sector character string indicating sector FrEDI SV module calculate impacts (see get_sv_sectorInfo() list available sectors). driverInput data frame four custom scenarios drivers (temperature global mean sea level rise). driverInput requires data frame columns \"year\" \"scenario\". data frame must also include third column: \"temp_C\" temperature-driven sectors (containing temperature values degrees Celsius warming contiguous U.S.) \"slr_cm\" sea level rise (SLR)-driven sectors (containing values global mean sea level rise centimeters). Run get_sv_sectorInfo(gcmOnly=TRUE) see temperature-driven sectors SV module get_sv_sectorInfo(slrOnly=TRUE) see SLR-driven scenarios. Users can also pass data frame four columns (\"year\", \"scenario\", \"temp_C\", \"slr_cm\"), case run_fredi_sv() determines whether use \"temp_C\" \"slr_cm\" column driver trajectory based specified sector. Driver inputs scenarios start year 2000 earlier. scenarios must include least two non-missing values  (especially values 2000 2100). required columns missing, run_fredi_sv() use default temperature sea level rise scenario run_fredi(). data frame passed driverInput four unique scenarios, run_fredi_sv() run first four scenarios. popInput input population scenario requires data frame object single scenario state-level population values. population scenario must five columns names \"year\", \"region\", \"state\", \"postal\", \"state_pop\" containing year, NCA region name, state name, postal code abbreviation (e.g., \"\" \"Maine\") state, state population, respectively. popInput accepts single scenario, contrast driverInput. words, run_fredi_sv() uses population scenario driver scenarios passed driverInput. user specify input scenario population (.e., popInput = NULL, run_fredi_sv() uses default population scenario. Population inputs must least one non-missing value 2010 earlier least one non-missing value final analysis year (2100). Population values must greater equal zero. silent logical (TRUE/FALSE) value indicating level messaging desired user (defaults silent=TRUE).","code":""},{"path":"https://usepa.github.io/FrEDI/reference/run_fredi_sv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate climate change impacts on socially vulnerable (SV) populations throughout the 21st century for available sectors — run_fredi_sv","text":"output run_fredi_sv() R data frame object containing average annual physical impacts socially vulnerable groups, NCA region level five-year increments.","code":""},{"path":"https://usepa.github.io/FrEDI/reference/run_fredi_sv.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate climate change impacts on socially vulnerable (SV) populations throughout the 21st century for available sectors — run_fredi_sv","text":"run_fredi_sv() projects annual climate change impacts socially vulnerable (SV) populations throughout 21st century (2010-2100) available sectors, using default user-specified population, temperature, sea level rise (SLR) trajectories. run_fredi_sv() main function FrEDI Social Vulnerability (SV) module FrEDI R package, described elsewhere (See https://epa.gov/cira/FrEDI information). SV module extends FrEDI framework socially vulnerable populations using data underlying 2021 U.S. Environmental Protection Agency (EPA) report Climate Change Social Vulnerability United States. Users can run run_fredi_sv() generate annual physical impacts SV groups individual sectors. running run_fredi_sv(), users must specify one sectors SV module; use get_sv_sectorInfo() list available sectors. run_fredi_sv() can run default population climate (temperature SLR) trajectories use run_fredi_sv() run custom scenarios. Running run_fredi_sv() custom climate scenarios requires passing data frame scenarios driverInput argument. run_fredi_sv() can also run custom population scenario passing data frame regional population trajectories popInput argument; unlike climate scenarios, run_fredi_sv() run single scenario time. driverInput can take data frame containing four custom scenarios drivers (temperature global mean sea level rise). driverInput requires data frame columns \"year\" \"scenario\". data frame must also include third column: \"temp_C\" temperature-driven sectors (containing temperature values degrees Celsius warming contiguous U.S.) \"slr_cm\" sea level rise (SLR)-driven sectors (containing values global mean sea level rise centimeters). Run get_sv_sectorInfo(gcmOnly = TRUE) see temperature-driven sectors SV module get_sv_sectorInfo(slrOnly = TRUE) see SLR-driven scenarios. Users can also pass data frame four columns (\"year\", \"scenario\", \"temp_C\", \"slr_cm\"), case run_fredi_sv() determines whether use \"temp_C\" \"slr_cm\" column driver trajectory based specified sector. required columns missing, run_fredi_sv() use default temperature sea level rise scenario run_fredi(). data frame passed driverInput four unique scenarios, run_fredi_sv() run first four scenarios. Temperature inputs must temperature change degrees Celsius contiguous U.S. (use convertTemps() convert global temperatures CONUS temperatures passing driverInput) relative 1995 baseline (1995 central year 1986-2005 baseline period; values start zero year 1995). Sea level rise inputs must centimeters relative 2000 baseline (.e., values start zero year 2000). Driver inputs scenarios start year 2000 earlier. scenarios must include least two non-missing values  (especially values 2000 2100). input population scenario requires data frame object single scenario state-level population values. population scenario must five columns names \"year\", \"region\", \"state\", \"postal\", \"state_pop\" containing year, NCA region name, state name, postal code abbreviation (e.g., \"\" \"Maine\") state, state population, respectively. popInput accepts single scenario, contrast driverInput. words, run_fredi_sv() uses population scenario driver scenarios passed driverInput. user specify input scenario population (.e., popInput = NULL, run_fredi_sv() uses default population scenario. Population inputs must least one non-missing value 2010 earlier least one non-missing value final analysis year (2100). Population values must greater equal zero. default regional population scenario drawn Integrated Climate Land Use Scenarios version 2 (ICLUSv2) model (Bierwagen et al, 2010; EPA 2017) Median variant projection United Nations (United Nations, 2015). Note FrEDI SV default population scenario differs default population scenario used run_fredi(). output run_fredi_sv() R data frame object containing average annual physical impacts socially vulnerable groups, NCA region level five-year increments.","code":""},{"path":"https://usepa.github.io/FrEDI/reference/run_fredi_sv.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculate climate change impacts on socially vulnerable (SV) populations throughout the 21st century for available sectors — run_fredi_sv","text":"Bierwagen, B., D. M. Theobald, C. R. Pyke, . Choate, P. Groth, J. V. Thomas, P. Morefield. 2010. “National housing impervious surface scenarios integrated climate impact assessments.” Proc. Natl. Acad. Sci. 107 (49): 20887–20892. https://doi.org/10.1073/pnas.1002096107. EPA. 2017. Multi-Model Framework Quantitative Sectoral Impacts Analysis: technical report Fourth National Climate Assessment. U.S. Environmental Protection Agency, EPA 430-R-17-001. EPA. 2021. Technical Documentation Framework Evaluating Damages Impacts (FrEDI). U.S. Environmental Protection Agency, EPA 430-R-21-004. Available https://epa.gov/cira/FrEDI/. EPA. 2021. Climate Change Social Vulnerability United States: Focus Six Impacts. U.S. Environmental Protection Agency, EPA 430-R-21-003. Available https://www.epa.gov/cira/social-vulnerability-report/. United Nations. 2015. World population prospects: 2015 revision. New York: United Nations, Department Economic Social Affairs, Population Division. U.S. Global Change Research Program. 2015. Scenarios National Climate Assessment. Available https://scenarios.globalchange.gov/regions_nca4.","code":""},{"path":"https://usepa.github.io/FrEDI/reference/run_fredi_sv.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate climate change impacts on socially vulnerable (SV) populations throughout the 21st century for available sectors — run_fredi_sv","text":"","code":"### Run SV Module with defaults without specifying sector df_sv <- run_fredi_sv() #> [1] \"Please select a sector: \" #> [1] \"1. Air Quality - Childhood Asthma\" #> [1] \"2. Air Quality - Premature Mortality\" #> [1] \"3. Labor\" #> [1] \"4. Extreme Temperature\" #> [1] \"5. Roads\" #> [1] \"6. Transportation Impacts from High Tide Flooding\" #> [1] \"7. Coastal Properties\" #> Warning: type 29 is unimplemented in 'type2char' #> Error in readline(prompt = sector_msg3): INTEGER() can only be applied to a 'integer', not a 'unknown type #29'  ### Return a character vector with the names of all of the sectors in the FrEDI SV Module: get_sv_sectorInfo() #> [1] \"Air Quality - Childhood Asthma\"                 #> [2] \"Air Quality - Premature Mortality\"              #> [3] \"Coastal Properties\"                             #> [4] \"Extreme Temperature\"                            #> [5] \"Labor\"                                          #> [6] \"Roads\"                                          #> [7] \"Transportation Impacts from High Tide Flooding\"  ### Return a data frame of all of the sectors in the FrEDI SV Module (sector names and additional information) get_sv_sectorInfo(description=T) #>                                           sector modelType      driverUnit #> 1                 Air Quality - Childhood Asthma       GCM degrees Celsius #> 2              Air Quality - Premature Mortality       GCM degrees Celsius #> 3                             Coastal Properties       SLR              cm #> 4                            Extreme Temperature       GCM degrees Celsius #> 5                                          Labor       GCM degrees Celsius #> 6                                          Roads       GCM degrees Celsius #> 7 Transportation Impacts from High Tide Flooding       SLR              cm #>                                        impactUnit #> 1                          Childhood asthma cases #> 2                             Premature Mortality #> 3 Individuals threatened with total property loss #> 4                                       Mortality #> 5                             Hours of labor lost #> 6                                  Hours of delay #> 7                                  Hours of delay #>                              variants #> 1                                 N/A #> 2                                 N/A #> 3 Without Adaptation, With Adaptation #> 4                                 N/A #> 5                                 N/A #> 6 No Adaptation, Proactive Adaptation #> 7 Without Adaptation, With Adaptation  ### Run SV Module with defaults for \"Coastal Properties\" without saving df_sv <- run_fredi_sv(sector=\"Coastal Properties\") #> Running FrEDI SV for sector 'Coastal Properties': #>  #> \tPreparing driver scenario... #> \t\tUsing default temperature scenario... #> \t\tCreating SLR scenario from temperature scenario... #>  #> \tPreparing population scenario... #> \t\tUsing default population scenario... #> \t\tCalculating county population from state population... #>  #> \tCalculating impacts for sector=\"Coastal Properties\", variant=\"Without Adaptation\", scenario=\"FrEDI Default\"... #> \t\tCalculating scaled impacts for each tract... #> \t\t \tFinished calculating tract-level impacts. #> \t\tCalculating total impacts for each tract... #> \t\t\tFinished calculating total impacts. #>  #> \tCalculating impacts for sector=\"Coastal Properties\", variant=\"With Adaptation\", scenario=\"FrEDI Default\"... #> \t\tCalculating scaled impacts for each tract... #> \t\t \tFinished calculating tract-level impacts. #> \t\tCalculating total impacts for each tract... #> \t\t\tFinished calculating total impacts. #> \tFinished.  ### Run SV Module with defaults for \"Extreme Temperature\" without saving df_sv <- run_fredi_sv(sector=\"Extreme Temperature\") #> Running FrEDI SV for sector 'Extreme Temperature': #>  #> \tPreparing driver scenario... #> \t\tUsing default temperature scenario... #>  #> \tPreparing population scenario... #> \t\tUsing default population scenario... #> \t\tCalculating county population from state population... #>  #> \tCalculating impacts for sector=\"Extreme Temperature\", variant=\"N/A\", scenario=\"FrEDI Default\"... #> \t\tCalculating scaled impacts for each tract... #> \t\t \tFinished calculating tract-level impacts. #> \t\tCalculating total impacts for each tract... #> \t\t\tFinished calculating total impacts. #> \tFinished.  ### Load temperature scenarios load(gcamScenarios) #> Error in load(gcamScenarios): bad 'file' argument  ### Load population scenario load(popScenario) #> Error in load(popScenario): bad 'file' argument  ### Run SV Module for \"Extreme Temperature\" with custom population and temperature scenarios df_sv <- run_fredi_sv(sector = \"Extreme Temperature\", driverInput = gcamScenarios, popInput = popScenario) #> Running FrEDI SV for sector 'Extreme Temperature': #> \tChecking `driverInput` values... #> \tChecking scenarios in `driverInput`... #> \t\tWarning: `driverInput` has more than four distinct scenarios! #> \t\t\tOnly the first four scenarios will be used... #> \tChecking `driverInput` values for temperature scenario... #> \t\tAll temperature scenario columns present... #> \tChecking `popInput` values... #> \t\tAll population scenario columns present in `popInput`... #>  #> \tPreparing driver scenario... #> \t\tUsing temperature scenario from user inputs... #>  #> \tPreparing population scenario... #> \t\tCreating population scenario from user inputs... #> \t\tCalculating county population from state population... #>  #> \tCalculating impacts for sector=\"Extreme Temperature\", variant=\"N/A\", scenario=\"Hector_GCAM_v5.3_ECS_3.0_REF\"... #> \t\tCalculating scaled impacts for each tract... #> \t\t \tFinished calculating tract-level impacts. #>  #> \tCalculating impacts for sector=\"Extreme Temperature\", variant=\"N/A\", scenario=\"Hector_GCAM_v5.3_ECS_3.0_REF_20\"... #> \t\tCalculating scaled impacts for each tract... #> \t\t \tFinished calculating tract-level impacts. #>  #> \tCalculating impacts for sector=\"Extreme Temperature\", variant=\"N/A\", scenario=\"Hector_GCAM_v5.3_ECS_3.0_REF_30\"... #> \t\tCalculating scaled impacts for each tract... #> \t\t \tFinished calculating tract-level impacts. #>  #> \tCalculating impacts for sector=\"Extreme Temperature\", variant=\"N/A\", scenario=\"Hector_GCAM_v5.3_ECS_3.0_REF_50\"... #> \t\tCalculating scaled impacts for each tract... #> \t\t \tFinished calculating tract-level impacts. #> \t\tCalculating total impacts for each tract... #> \t\t\tFinished calculating total impacts. #> \t\tCalculating total impacts for each tract... #> \t\t\tFinished calculating total impacts. #> \t\tCalculating total impacts for each tract... #> \t\t\tFinished calculating total impacts. #> \t\tCalculating total impacts for each tract... #> \t\t\tFinished calculating total impacts. #> \tFinished."},{"path":"https://usepa.github.io/FrEDI/reference/temps2slr.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert global temperature change in degrees Celsius to global mean sea level rise (GMSL) in centimeters — temps2slr","title":"Convert global temperature change in degrees Celsius to global mean sea level rise (GMSL) in centimeters — temps2slr","text":"pre-processing helper function converts vector global temperatures global mean sea level rise (GMSL). function adapts method described Kopp et al. (2016) (see references, ).","code":""},{"path":"https://usepa.github.io/FrEDI/reference/temps2slr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert global temperature change in degrees Celsius to global mean sea level rise (GMSL) in centimeters — temps2slr","text":"","code":"temps2slr(temps, years)"},{"path":"https://usepa.github.io/FrEDI/reference/temps2slr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert global temperature change in degrees Celsius to global mean sea level rise (GMSL) in centimeters — temps2slr","text":"temps numeric vector global temperatures degrees Celsius. temperature series corresponding years must begin 2000 earlier. years numeric vector years (common era) corresponding temperatures provided temps. temperature series corresponding years must begin 2000 earlier.","code":""},{"path":"https://usepa.github.io/FrEDI/reference/temps2slr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert global temperature change in degrees Celsius to global mean sea level rise (GMSL) in centimeters — temps2slr","text":"Outputs data frame two columns: year, years years input fall within range 2000 2090 slr_cm GMSL centimeters.","code":""},{"path":"https://usepa.github.io/FrEDI/reference/temps2slr.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convert global temperature change in degrees Celsius to global mean sea level rise (GMSL) in centimeters — temps2slr","text":"function converts temperature scenario (global temperatures degrees Celsius) SLR scenario use estimate impacts global mean sea level rise (GMSL) affected sectors. temps2slr() implements method described Kopp et al., 2016, \"Temperature-driven global sea-level variability Common Era\" (see references, ). Kopp et al.'s \"semiempirical\" sea-level model relates rate global sea level (GSL) rise \\(\\frac{dh}{dt}\\) global mean temperature \\(T(t)\\), equilibrium temperature \\(T_0(t)\\), small residual trend arising long-term response earlier climate change \\(\\phi(t)\\): $$dh/dt = \\alpha \\cdot (T(t) - T_0(t)) + \\phi(t)$$ explained Kopp et al. (2016): \"first term describes GSL response climate change study period. second term covers small residual trend arising long-term response earlier climate change (.e., deglaciation), slowly decaying millennia order 0.1 mm/year 2000 CE. thus negligible effect modeled GSL rise 20th 21st centuries\" (Kopp et al., 2016, p. E1439). equation , \\(T_0(t)\\) \\(\\phi(t)\\) functions time, : $$\\frac{dT_0(t)}{dt} = \\frac{T(t) - Te(t)}{\\tau_1}$$ : $$\\frac{d\\phi(t)}{dt} = \\frac{\\phi}{\\tau_2}$$ \\(\\tau_1\\) \\(\\tau_2\\) constants.","code":""},{"path":"https://usepa.github.io/FrEDI/reference/temps2slr.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Convert global temperature change in degrees Celsius to global mean sea level rise (GMSL) in centimeters — temps2slr","text":"Environmental Protection Agency (EPA). 2021. Technical Documentation Framework Evaluating Damages Impacts (FrEDI). Technical Report EPA 430-R-21-004, EPA, Washington, DC. Available https://epa.gov/cira/FrEDI/. Kopp, Robert E., et al. (2016). Temperature-driven global sea-level variability Common Era. PNAS: E1434-E1441. Available https://www.pnas.org/content/113/11/E1434","code":""},{"path":"https://usepa.github.io/FrEDI/reference/temps2slr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert global temperature change in degrees Celsius to global mean sea level rise (GMSL) in centimeters — temps2slr","text":"","code":"### Path to example scenarios scenariosPath <- system.file(package=\"FrEDI\") |> file.path(\"extdata\",\"scenarios\") ### View example scenario names  scenariosPath |> list.files() #> [1] \"GCAM_scenario.csv\"          \"State ICLUS Population.csv\" #> [3] \"slr_from_GCAM.csv\"           ### Temperature Scenario File Name tempInputFile <- scenariosPath |> file.path(\"GCAM_scenario.csv\")  ### Import example temperature scenario example_inputsList <- import_inputs(tempfile = tempInputFile) #>  #> In import_inputs(): #> \tLoading data... #> \tUser specified tempfile... #> \t\tImporting data from C:/Program Files/R/R-4.4.0/library/FrEDI/extdata/scenarios/GCAM_scenario.csv... #> \t\tData loaded. #>  #> \tChecking input values... #>  #> \t\tChecking input values for temp inputs... #> \t\t\tColumn \"temp_C\" not found in tempfile data! #> \t\t\tLooking for columns with matches to the string \"temp\"...1 match found! #> \t\t\tUsing column \"temp_C_global\", and renaming to \"temp_C\"... #> \t\tValues passed. #>  #> Finished.  ### Extract the example temperature scenario data frame from the list ### Example has global temperatures in degrees Celsius x_tempInput <- example_inputsList$tempInput  ### Calculate global mean sea level rise in cm from global temperatures x_slr <- temps2slr(temps=x_tempInput$temp_C, years=x_tempInput$year) #> \tWarning: There are duplicate years in the inputs! #> \tExiting..."},{"path":"https://usepa.github.io/FrEDI/news/index.html","id":"fredi-v411","dir":"Changelog","previous_headings":"","what":"FrEDI v4.1.1","title":"FrEDI v4.1.1","text":"See FrEDI v4.1 full release notes Bug fixes - n/Updates - ** Major updates: n/** Minor updates include: updated includeaggregate flag suicide sector run_fredi() run_fredi_sv(), alert users alternative sector aggregation approach avoid possible double counting impacts default temperature-related mortality sector; updated R package documentation reflect updates; updated github page Additional sectors added - n/Documentation fixes - n/New features - n/","code":""},{"path":"https://usepa.github.io/FrEDI/news/index.html","id":"fredi-v41","dir":"Changelog","previous_headings":"","what":"FrEDI v4.1","title":"FrEDI v4.1","text":"release corresponds FrEDI v4.1, accompanies publication 2024 FrEDI Technical Documentation. Bug fixes - n/Updates - ** Major updates: impacts damages now calculated state-level (previously region-level) 25 impact-category sectors; FrEDI default max year changed 2090 2100 ** Minor updates include: updated import_inputs() accept population datafiles containing U.S. national, contiguous U.S., U.S. state populations set temperature values outside allowed range (<=0C >= 30C) zero; updated run_fredi_sv() accept state-level population inputs; updated R package documentation reflect new features Additional sectors added - n/Documentation fixes - minor updates account new default max year state-level population input formatting features New features - FrEDI outputs include damages impacts state-level (48 contiguous states District Columbia) 25 impact category sectors; FrEDI default max year changed 2090 2100","code":""},{"path":"https://usepa.github.io/FrEDI/news/index.html","id":"fredi-v402-peer-review","dir":"Changelog","previous_headings":"","what":"FrEDI v4.0.2 (peer-review)","title":"FrEDI v4.0.2 (peer-review)","text":"Starting February 2024, FrEDI Technical Documentation v4.0 FrEDI R package subject public review comment period independent, external peer-review. release corresponds FrEDI v4.0.2, peer-review release version. Bug fixes - fixes GDP input reference meta data documentation run_fredi() Updates - ** Major updates include: impacts damages now calculated state-level (previously region-level) 17 impact-category sectors ** Minor updates include: n/Additional sectors added - n/Documentation fixes - n/New features - FrEDI outputs include damages impacts state-level (48 contiguous states District Columbia) 17 impact category sectors.","code":""},{"path":"https://usepa.github.io/FrEDI/news/index.html","id":"fredi-v401-public-review","dir":"Changelog","previous_headings":"","what":"FrEDI v4.0.1 (public review)","title":"FrEDI v4.0.1 (public review)","text":"Starting February 2024, FrEDI Technical Documentation v4.0 FrEDI R package subject public review comment period independent, external peer-review. release corresponds FrEDI v4.0.1, public comment release version. Bug fixes - file paths function documentation run_fredi(), import_inputs(), aggregate_impacts(); income elasticity SLR sectors post-2090 run_fredi() (longer dependent argument elasticity) Updates - ** Major updates include: impacts damages now calculated state-level (previously region-level) 12 impact-category sectors; population inputs run_fredi() now requires state-level population instead region-level inputs; damage function extrapolation approach warmer temperatures run_fredi() run_fredi_sv(); default income elasticity (argument elasticity run_fredi()) 0.4 1.0; updated run_fredi() user inputs remove options calculate present values (arguments pv, rate, baseYear) add option output intermediate calculation columns ** Minor updates include: magrittr pipe operator %>% native pipe operator |>; Added monitoring default run_fredi() parameter use; output columns aggregate_impacts (added columns “sectorprimary” “includeaggregate” aggregation levels added columns “physical_impacts”, “physicalmeasure” aggregation levels except aggLevels=”impacttype”); removed option output run_fredi_sv() module results Excel template Documentation fixes - version corresponds February 2024 version FrEDI Technical Documentation (see https://www.epa.gov/cira/-fredi). Function documentation updated correspond updates. Additional sectors added - n/New features - FrEDI outputs include damages impacts state-level (48 contiguous states District Columbia) 12 impact category sectors.","code":""},{"path":"https://usepa.github.io/FrEDI/news/index.html","id":"fredi-v34","dir":"Changelog","previous_headings":"","what":"FrEDI v3.4","title":"FrEDI v3.4","text":"Bug fixes - minor fixes inputs used run_fredi() run_fredi_sv() Updates - minor updates run_fredi_sv() output template documentation; run_fredi() input options Documentation fixes - minor documentation fixes, e.g., global conus temperature import_inputs, updates variant names, function documentation Additional sectors added - (temperature weather impacts ) Suicide Incidence; (health economic burden changes ) Vibriosis cases New features - added components create GitHub IO site (https://usepa.github.io/FrEDI/); new run_fredi() option report list input parameters runtime; new user option extend run_fredi() 2300","code":""},{"path":"https://usepa.github.io/FrEDI/news/index.html","id":"fredi-v30","dir":"Changelog","previous_headings":"","what":"FrEDI v3.0","title":"FrEDI v3.0","text":"Bug fix - global conus temperature import_inputs Additional sector added - ATS Extreme Temperature Mortality New feature - additional capability calculate impacts social vulnerable communities","code":""},{"path":"https://usepa.github.io/FrEDI/news/index.html","id":"fredi-v220","dir":"Changelog","previous_headings":"","what":"FrEDI v2.2.0","title":"FrEDI v2.2.0","text":"Additional sectors added - Crime, Agriculture, Marine Fisheries","code":""},{"path":"https://usepa.github.io/FrEDI/news/index.html","id":"fredi-v210","dir":"Changelog","previous_headings":"","what":"FrEDI v2.1.0","title":"FrEDI v2.1.0","text":"Updates - extreme temperature mortality sector New feature - option user supplied IEVSL","code":""},{"path":"https://usepa.github.io/FrEDI/news/index.html","id":"fredi-v20","dir":"Changelog","previous_headings":"","what":"FrEDI v2.0","title":"FrEDI v2.0","text":"Initial release FrEDI corresponds technical documentation 2021. https://www.epa.gov/cira/fredi/","code":""}]
