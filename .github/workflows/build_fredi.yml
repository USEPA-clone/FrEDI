### https://github.com/actions/upload-artifact
### https://github.blog/changelog/2021-11-10-github-actions-input-types-for-manual-workflows/
### https://docs.github.com/en/actions/using-workflows/caching-dependencies-to-speed-up-workflows
### https://github.com/r-lib/actions/tree/v2/setup-r-dependencies
### https://docs.github.com/en/actions/using-jobs/using-conditions-to-control-job-execution
### For uploading artifacts:
###     "path:" is the output path where Pandoc will write the compiled PDF.
###      Note, this should be the same directory as the input paper.md
name: 4. Build FrEDI Package

# on: [workflow_dispatch]
on:
  workflow_dispatch:
    inputs:
      update_docs:
        type: choice
        description: Update documentation?
        required: true
        options:
        - no
        - yes
#       update_results:
#         type: choice
#         description: Update default results?
#         required: true
#         options:
#         - no
#         - yes
      update_scenarios:
        type: multi-choice
        description: Update scenarios?
        required: true
        options:
        - Temps & SLR
        - Population
        - GDP

jobs:
  compile_data:
    runs-on: ubuntu-latest
    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}

    name: Load Package Code
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup R
        uses: r-lib/actions/setup-r@v2

      - name: Setup R package dependencies
        uses: r-lib/actions/setup-r-dependencies@v2
        with:
          cache: true
          cache-version: 1
          packages: |
            any::tidyverse
            any::ggpubr
            any::openxlsx
            any::devtools

      - name: Update Scenarios
        run: |
          Rscript -e '
            ###### Conditionals ######
            ### Which scenarios/documentation to update
            do_temp  <- "Temps & SLR" %in% "${{ inputs.update_scenarios}}"
            do_gdp   <- "GDP"         %in% "${{ inputs.update_scenarios}}"
            do_pop   <- "Pop"         %in% "${{ inputs.update_scenarios}}"
            do_docs  <- "yes"         %in% "${{ inputs.update_scenarios}}"


            ###### File Paths ######
            ### - Main repo path, FrEDI project path
            ### - Data path, scenario csv path
            rPath0   <- "."
            pPath0   <- rPath0 |> file.path("FrEDI")
            dPath0   <- rPath0 |> file.path("data" )
            cPath0   <- rPath0 |> file.path("inst", "extdata", "scenarios")


            ###### Update Scenarios ######
            ### Temperature & CSV
            if(do_temp) {
              gcamScenarios <- "gcam_scenarios" |> get_frediDataObj("scenarioData")
              fTemps        <- "gcamScenarios"
              dTemps        <- dPath0 |> paste0(fTemps, ".rda")
              cTemps        <- cPath0 |> paste0(fTemps, ".csv")
              gcamScenarios |> save(file=dTemps)
              gcamScenarios |> write.csv(filename=cTemps, row.names=F)
              rm(fTemps, dTemps, cTemps, gcamScenarios)
            } ### End if(do_temp)

            ### GDP
            if(do_gdp) {
              gdpDefault    <- "gdp_default" |> get_frediDataObj("scenarioData")
              fGdp          <- "gdpDefault"
              dGdp          <- dPath0 |> paste0(fGdp, ".rda")
              cGdp          <- cPath0 |> paste0(fGdp, ".csv")
              gdpDefault |> save(file=dGdp)
              gdpDefault |> write.csv(filename=cGdp, row.names=F)
              rm(fGdp, dGdp, cGdp, gdpDefault)
            } ### End if(do_gdp)

            ### Population
            if(do_pop) {
              popDefault    <- "pop_default" |> get_frediDataObj("scenarioData")
              fPop          <- "popDefault"
              dPop          <- dPath0 |> paste0(fPop, ".rda")
              cPop          <- cPath0 |> paste0(fPop, ".csv")
              popDefault |> save(file=dPop)
              popDefault |> write.csv(filename=cPop, row.names=F)
              rm(fPop, dPop, cPop, popDefault)
            } ### End if(do_pop)


            ###### Update Documentation ######
            ###### - Build Manual
            ###### - Add and build vignettes
            ###### - Generate Documentation
            if(do_docs) {
              roxygen2::roxygenise(pPath0)
              devtools::document(pkg = pPath0)
              # devtools::build_manual(pkg = pPath0)
              # devtools::build_vignettes(pkg = pPath0)
            } ### End if(do_docs)

            ###### Build Package ######
            ###### - Build Package but do not include vignettes
            # devtools::build(pkg=pPath0, path=rPath0)

          '


      - name: Build Package
        run: |
          Rscript -e '
            ### Main repo path, FrEDI project path, scripts path
            rPath0   <- ".";
            pPath0   <- rPath0 |> file.path("FrEDI")
            oPath0   <- pPath0 |> file.path("data", "defaultResults.rda")

            # ###### Create Default Results ######
            # pPath0 |> devtools::load_all()
            # defaultResults <- run_fredi()
            # save(defaultResults, file=oPath0)

            ###### Update Documentation ######
            ###### - Build Manual
            ###### - Add and build vignettes
            ###### - Generate Documentation
            roxygen2::roxygenise(pPath0)
            devtools::document(pkg = pPath0)
            # devtools::build_manual(pkg = pPath0)
            # devtools::build_vignettes(pkg = pPath0)

            ###### Build Package ######
            ###### - Build Package but do not include vignettes
            # devtools::build(pkg=pPath0, path=rPath0)

          '


      - name: Commit results
        run: |
          git config --local core.autocrlf false
          git config --local user.email "${{ github.actor }}@users.noreply.github.com"
          git config --local user.name  "${{ github.actor }}"
          git add FrEDI/data/defaultResults.rda
          git add FrEDI/man/*.Rd
          git pull origin ${{ github.head_ref }} --autostash --rebase -X ours
          git commit -am "Updated documentation & default results"
          git push

